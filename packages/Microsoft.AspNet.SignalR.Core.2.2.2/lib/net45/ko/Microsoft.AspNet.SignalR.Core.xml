<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.AspNet.SignalR.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.AspNet.SignalR.AuthorizeAttribute">
      <summary>허브 및 허브 메서드에 적용하여 클라이언트에 허브에 연결할 수 있는 권한을 부여하고 클라이언트에 허브 메서드를 호출할 수 있는 권한을 부여합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.AuthorizeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.AuthorizeAttribute._requireOutgoing">
      <summary>허브의 서버 쪽 메서드에 대한 호출에 대해서만 권한 부여를 적용할지 여부를 지정합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>클라이언트에 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />에 연결할 수 있는 권한이 부여되는지 여부를 결정합니다.</summary>
      <returns>호출자에게 허브에 연결할 수 있는 권한이 부여되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="hubDescriptor">연결하려고 하는 허브 클라이언트에 대한 설명입니다.</param>
      <param name="request">클라이언트로부터의 (다시) 연결 요청입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)">
      <summary>클라이언트에 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> 메서드를 호출할 수 있는 권한이 부여되는지 여부를 결정합니다.</summary>
      <returns>호출자에게 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> 메서드를 호출할 수 있는 권한이 부여되면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="hubIncomingInvokerContext">
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> 메서드 호출에 대한 세부 정보를 제공하는 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" />입니다.</param>
      <param name="appliesToMethod">인터페이스 인스턴스가 메서드에 직접 적용된 특성임을 나타내려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.RequireOutgoing">
      <summary>허브의 서버 쪽 메서드에 대한 호출에 대해서만 권한 부여를 적용하려면 false로 설정합니다.이 속성은 허브 클래스에 적용된 특성에만 영향을 줍니다.이 속성은 읽을 수 없습니다.</summary>
      <returns>허브의 서버 쪽 메서드에 대한 호출에 대해서만 권한 부여를 적용하려면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.Roles">
      <summary>사용자 역할을 가져오거나 설정합니다.</summary>
      <returns>사용자 역할입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.UserAuthorized(System.Security.Principal.IPrincipal)">
      <summary>재정의된 경우 사용자 지정 인증 확인의 진입점을 제공합니다.<see cref="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)" /> 및 <see cref="M:Microsoft.AspNet.SignalR.AuthorizeAttribute.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)" />에서 호출됩니다.</summary>
      <returns>사용자에게 권한이 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="user">권한을 부여할 클라이언트에 대한 <see cref="T:System.Security.Principal.IPrincipal" />입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.AuthorizeAttribute.Users">
      <summary>권한이 있는 사용자를 가져오거나 설정합니다.</summary>
      <returns>권한이 있는 사용자입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionConfiguration">
      <summary>연결 구성을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionConfiguration.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionConfiguration.EnableJSONP">
      <summary>JSONP가 사용하도록 설정되었는지 여부를 확인하는 부울을 가져오거나 설정합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionConfiguration.Resolver">
      <summary>허브 연결에 사용할 종속성 확인자를 가져오거나 설정합니다.</summary>
      <returns>허브 연결에 사용할 종속성 확인자입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionExtensions">
      <summary>특정 신호를 구독하는 모든 연결에 메시지를 보내는 데 사용되는 확장 메서드를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Broadcast(Microsoft.AspNet.SignalR.IConnection,System.Object,System.String[])">
      <summary>지정한 연결 ID를 제외하고 모든 연결에 값을 브로드캐스트합니다.</summary>
      <returns>브로드캐스트가 완료된 경우를 나타내는 작업입니다.</returns>
      <param name="connection">연결입니다.</param>
      <param name="value">브로드캐스트할 값입니다.</param>
      <param name="excludeConnectionIds">브로드캐스트에서 제외할 연결 ID 목록입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Send(Microsoft.AspNet.SignalR.IConnection,System.Collections.Generic.IList{System.String},System.Object)">
      <summary>지정한 신호를 구독한 모든 연결에 메시지를 보냅니다.신호의 예는 특정 연결 ID일 수 있습니다.</summary>
      <returns>브로드캐스트가 완료된 경우를 나타내는 작업입니다.</returns>
      <param name="connection">연결입니다.</param>
      <param name="connectionIds">보낼 연결 ID입니다.</param>
      <param name="value">게시할 값입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionExtensions.Send(Microsoft.AspNet.SignalR.IConnection,System.String,System.Object)">
      <summary>지정한 신호를 구독한 모든 연결에 메시지를 보냅니다.신호의 예는 특정 연결 ID일 수 있습니다.</summary>
      <returns>브로드캐스트가 완료된 경우를 나타내는 작업입니다.</returns>
      <param name="connection">연결입니다.</param>
      <param name="connectionId">보낼 연결 ID입니다.</param>
      <param name="value">게시할 값입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.ConnectionMessage">
      <summary>하나 이상의 연결로 전송된 메시지입니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.Collections.Generic.IList{System.String},System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.Collections.Generic.IList{System.String},System.Object,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.String,System.Object)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.ConnectionMessage" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="signal">신호입니다.</param>
      <param name="value">메시지의 페이로드입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.ConnectionMessage.#ctor(System.String,System.Object,System.Collections.Generic.IList{System.String})">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.ConnectionMessage" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="signal">신호입니다.</param>
      <param name="value">메시지의 페이로드입니다.</param>
      <param name="excludedSignals">제외할 신호입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.ExcludedSignals">
      <summary>이 메시지를 수신할 연결을 필터링하는 데 사용해야 할 신호 목록을 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IList`1" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Signal">
      <summary>보내야 할 이 메시지에 대한 신호입니다.이 신호를 구독한 연결은 메시지 페이로드를 받게 됩니다.</summary>
      <returns>
        <see cref="T:System.String" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Signals">
      <summary>이 메시지가 배달되어야 하는 신호 목록입니다.이 목록이 사용되면 신호를 사용할 수 없습니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.ConnectionMessage.Value">
      <summary>메시지의 페이로드입니다.</summary>
      <returns>
        <see cref="T:System.Object" />을 반환합니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Cookie">
      <summary>SignalR의 쿠키를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Cookie.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Cookie" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">쿠키의 속성 이름입니다.</param>
      <param name="value">쿠키의 속성 값입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Cookie" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">쿠키의 속성 이름입니다.</param>
      <param name="value">쿠키의 속성 값입니다.</param>
      <param name="domain">쿠키의 도메인 속성입니다.</param>
      <param name="path">쿠키의 속성 경로입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Domain">
      <summary>쿠키의 도메인을 가져오거나 설정합니다.</summary>
      <returns>쿠키의 도메인입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Name">
      <summary>쿠키 이름을 가져오거나 설정합니다.</summary>
      <returns>쿠키의 이름입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Path">
      <summary>쿠키의 경로를 가져오거나 설정합니다.</summary>
      <returns>쿠키의 경로입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Cookie.Value">
      <summary>쿠키의 값을 가져오거나 설정합니다.</summary>
      <returns>쿠키의 값입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver">
      <summary>기본 동작이 있는 종속성 확인자를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Dispose">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" /> 클래스의 현재 인스턴스에서 사용된 리소스를 해제합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Dispose(System.Boolean)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.DefaultDependencyResolver" /> 클래스의 현재 인스턴스에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing">관리된 리소스와 관리되지 않은 리소스를 모두 해제하려면 true이고, 관리되지 않은 리소스만 해제하려면 false입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.GetService(System.Type)">
      <summary>임의의 개체 생성을 지원하는 단일 등록 서비스를 확인합니다.</summary>
      <returns>요청된 서비스 또는 개체입니다.</returns>
      <param name="serviceType">요청된 서비스 또는 개체의 형식입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.GetServices(System.Type)">
      <summary>여러 번 등록된 서비스를 확인합니다.</summary>
      <returns>요청된 서비스입니다.</returns>
      <param name="serviceType">요청된 서비스의 형식입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Register(System.Type,System.Collections.Generic.IEnumerable{System.Func{System.Object}})">
      <summary>지정된 서비스를 종속성 확인자에 등록합니다.</summary>
      <param name="serviceType">등록할 서비스의 유형입니다.</param>
      <param name="activators">종속성 확인자에 등록할 서비스입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DefaultDependencyResolver.Register(System.Type,System.Func{System.Object})">
      <summary>지정된 서비스를 종속성 확인자에 등록합니다.</summary>
      <param name="serviceType">등록할 서비스의 유형입니다.</param>
      <param name="activator">종속성 확인자에 등록할 서비스입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.Resolve``1(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>확장 형식을 확인합니다.</summary>
      <returns>확장 형식을 확인할 개체를 반환합니다.</returns>
      <param name="resolver">종속성 확인자입니다.</param>
      <typeparam name="T">확인할 형식입니다.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.Resolve(Microsoft.AspNet.SignalR.IDependencyResolver,System.Type)">
      <summary>확장 형식을 확인합니다.</summary>
      <returns>확장 형식을 확인할 개체를 반환합니다.</returns>
      <param name="resolver">종속성 확인자입니다.</param>
      <param name="type">확인할 형식입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.ResolveAll``1(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>모든 확장 형식을 확인합니다.</summary>
      <returns>확장 형식 확인 컬렉션을 반환합니다.</returns>
      <param name="resolver">종속성 확인자입니다.</param>
      <typeparam name="T">확인할 형식입니다.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.DependencyResolverExtensions.ResolveAll(Microsoft.AspNet.SignalR.IDependencyResolver,System.Type)">
      <summary>모든 확장 형식을 확인합니다.</summary>
      <returns>확장 형식 확인 컬렉션을 반환합니다.</returns>
      <param name="resolver">종속성 확인자입니다.</param>
      <param name="type">확인할 형식입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.GlobalHost">
      <summary>기본 호스트 정보에 대한 액세스를 제공합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.Configuration">
      <summary>기본 <see cref="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager" />를 가져옵니다.</summary>
      <returns>기본 <see cref="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager" />입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.ConnectionManager">
      <summary>기본 <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" />를 가져옵니다.</summary>
      <returns>기본 <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" />입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.DependencyResolver">
      <summary>기본 <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />를 가져오거나 설정합니다.</summary>
      <returns>기본 <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.HubPipeline">
      <summary>기본 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />를 가져옵니다.</summary>
      <returns>기본 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.GlobalHost.TraceManager">
      <summary>기본 <see cref="T:Microsoft.AspNet.SignalR.Tracing.ITraceManager" />를 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.GroupManager">
      <summary>연결을 위한 그룹을 관리합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.#ctor(Microsoft.AspNet.SignalR.IConnection,System.String)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.GroupManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="connection">이 그룹이 있는 <see cref="T:Microsoft.AspNet.SignalR.IConnection" />입니다.</param>
      <param name="groupPrefix">이 그룹의 접두사입니다.<see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> 이름 또는 <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> 유형 이름입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Add(System.String,System.String)">
      <summary>지정된 그룹에 연결을 추가합니다.</summary>
      <returns>그룹에 추가되고 있는 연결 ID를 나타내는 작업입니다.</returns>
      <param name="connectionId">그룹에 추가할 연결 ID입니다.</param>
      <param name="groupName">그룹의 이름입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Remove(System.String,System.String)">
      <summary>지정된 그룹에서 연결을 제거합니다.</summary>
      <returns>그룹에서 제거되고 있는 연결 ID를 나타내는 작업입니다.</returns>
      <param name="connectionId">그룹에서 제거할 연결 ID입니다.</param>
      <param name="groupName">그룹의 이름입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Send(System.Collections.Generic.IList{System.String},System.Object,System.String[])">
      <summary>지정된 그룹에 값을 보냅니다.</summary>
      <returns>보내기가 완료된 경우를 나타내는 작업입니다.</returns>
      <param name="groupNames">그룹의 이름입니다.</param>
      <param name="value">보낼 값입니다.</param>
      <param name="excludeConnectionIds">제외할 연결 ID 목록입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.GroupManager.Send(System.String,System.Object,System.String[])">
      <summary>지정된 그룹에 값을 보냅니다.</summary>
      <returns>보내기가 완료된 경우를 나타내는 작업입니다.</returns>
      <param name="groupName">그룹의 이름입니다.</param>
      <param name="value">보낼 값입니다.</param>
      <param name="excludeConnectionIds">제외할 연결 ID 목록입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hub">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hub" />에 연결된 SignalR 연결과 통신하는 메서드를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hub" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Clients">
      <summary>SignalR 연결과 통신하는 클라이언트를 가져오거나 설정합니다.</summary>
      <returns>SignalR 연결과 통신하는 클라이언트입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Context">
      <summary>호출 클라이언트에 대한 정보를 가져오거나 설정합니다.</summary>
      <returns>호출 클라이언트에 대한 정보입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.Dispose">
      <summary>이 인스턴스에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.Dispose(System.Boolean)">
      <summary>이 인스턴스에서 사용하는 모든 리소스를 해제합니다.</summary>
      <param name="disposing">관리된 리소스와 관리되지 않은 리소스를 해제하려면 true이고, 관리되지 않은 리소스만 해제하려면 false입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hub.Groups">
      <summary>이 허브 인스턴스의 그룹 관리자를 가져오거나 설정합니다.</summary>
      <returns>이 허브 인스턴스의 그룹 관리자입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnConnected">
      <summary>연결이 이 허브 인스턴스에 연결될 때 발생합니다.</summary>
      <returns>작업의 결과입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnDisconnected">
      <summary>연결이 이 허브 인스턴스와 끊어질 때 발생합니다.</summary>
      <returns>작업의 결과입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hub.OnReconnected">
      <summary>연결이 이 허브 인스턴스에 다시 연결될 때 발생합니다.</summary>
      <returns>작업의 결과입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.HubConfiguration">
      <summary>허브 구성을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.HubConfiguration.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableDetailedErrors">
      <summary>허브 메서드에서 발생한 자세한 예외가 호출하는 클라이언트에 다시 보고되는지를 확인합니다.기본값은 false입니다.</summary>
      <returns>허브 메서드에서 throw된 자세한 예외가 호출하는 클라이언트에 다시 보고되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableJavaScriptProxies">
      <summary>서버 쪽 허브의 JavaScript 프록시가 {Path}/hubs에서 자동으로 생성되는지 여부를 결정합니다.기본값은 true입니다.</summary>
      <returns>서버 쪽 허브의 JavaScript 프록시가 {Path}/hubs에서 자동으로 생성되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.HubException"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.HubException.#ctor(System.String,System.Object)"></member>
    <member name="P:Microsoft.AspNet.SignalR.HubException.ErrorData"></member>
    <member name="T:Microsoft.AspNet.SignalR.HubPipelineExtensions">
      <summary>데이터 형식에 사용자 지정 기능을 추가하는 확장 메서드를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.HubPipelineExtensions.RequireAuthentication(Microsoft.AspNet.SignalR.Hubs.IHubPipeline)">
      <summary>필요한 인증은 모든 허브 및 허브 메서드 전반에 적용될 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection" /> 및 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation" /> 권한 부여자를 통해 <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />을 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />에 추가합니다.이러한 권한 부여자를 사용하려면 서버 쪽 허브 메서드를 호출하거나 클라이언트 쪽 허브 메서드 호출을 수신하는 모든 클라이언트에 대해 <see cref="T:System.Security.Principal.IPrincipal" />의 <see cref="T:System.Security.Principal.IIdentity" /> IsAuthenticated가 true이어야 합니다.</summary>
      <param name="pipeline">
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />이 추가될 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IConnection">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> 및 해당 연결에 대한 통신 채널입니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IConnection.DefaultSignal">
      <summary>이 연결의 주 신호입니다.<see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />의 주 신호입니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)">
      <summary>신호를 구독한 연결에 메시지를 보냅니다.</summary>
      <returns>메시지가 전송됐을 때 반환되는 작업입니다.</returns>
      <param name="message">보낼 메시지입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IConnectionGroupManager">
      <summary>연결에 대한 그룹을 관리하며 메시지를 그룹에 보내는 것을 허용합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnectionGroupManager.Send(System.Collections.Generic.IList{System.String},System.Object,System.String[])">
      <summary>지정된 그룹에 값을 보냅니다.</summary>
      <returns>보내기가 완료된 경우를 나타내는 작업입니다.</returns>
      <param name="groupNames">그룹의 이름입니다.</param>
      <param name="value">보낼 값입니다.</param>
      <param name="excludeConnectionIds">제외할 연결 ID 목록입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IConnectionGroupManager.Send(System.String,System.Object,System.String[])">
      <summary>지정된 그룹에 값을 보냅니다.</summary>
      <returns>보내기가 완료된 경우를 나타내는 작업입니다.</returns>
      <param name="groupName">그룹의 이름입니다.</param>
      <param name="value">보낼 값입니다.</param>
      <param name="excludeConnectionIds">제외할 연결 ID 목록입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IDependencyResolver">
      <summary>SignalR의 종속성 확인자를 나타내는 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.GetService(System.Type)">
      <summary>지정된 유형의 서비스를 반환합니다.</summary>
      <returns>반환된 서비스입니다.</returns>
      <param name="serviceType">반환할 서비스의 유형입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.GetServices(System.Type)">
      <summary>지정된 유형의 서비스를 반환합니다.</summary>
      <returns>반환된 서비스입니다.</returns>
      <param name="serviceType">반환할 서비스의 유형입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.Register(System.Type,System.Collections.Generic.IEnumerable{System.Func{System.Object}})">
      <summary>지정된 유형의 서비스 목록을 등록합니다.</summary>
      <param name="serviceType">등록할 서비스의 유형입니다.</param>
      <param name="activators">활성화할 서비스를 나타내는 매개 변수를 받는 함수 대리자 목록입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IDependencyResolver.Register(System.Type,System.Func{System.Object})">
      <summary>지정된 유형의 서비스를 등록합니다.</summary>
      <param name="serviceType">등록할 서비스의 유형입니다.</param>
      <param name="activator">활성화할 서비스를 나타내는 매개 변수를 받는 함수 대리자입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IGroupManager">
      <summary>연결을 위한 그룹을 관리합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IGroupManager.Add(System.String,System.String)">
      <summary>지정된 그룹에 연결을 추가합니다.</summary>
      <returns>그룹에 추가되고 있는 연결 ID를 나타내는 작업입니다.</returns>
      <param name="connectionId">그룹에 추가할 연결 ID입니다.</param>
      <param name="groupName">그룹의 이름입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IGroupManager.Remove(System.String,System.String)">
      <summary>지정된 그룹에서 연결을 제거합니다.</summary>
      <returns>그룹에서 제거되고 있는 연결 ID를 나타내는 작업입니다.</returns>
      <param name="connectionId">그룹에서 제거할 연결 ID입니다.</param>
      <param name="groupName">그룹의 이름입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IHubContext">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> 정보에 대한 액세스를 제공합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IHubContext.Clients">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />의 SignalR 연결에 대한 모든 정보를 캡슐화합니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IHubContext.Groups">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.IGroupManager" /> 허브를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.IGroupManager" />을 반환합니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> 정보에 대한 액세스를 제공합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IPersistentConnectionContext.Connection">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.IConnection" />을 가져옵니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IPersistentConnectionContext.Groups">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.IConnectionGroupManager" />을 가져옵니다.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IRequest">
      <summary>SignalR 요청을 나타냅니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Cookies">
      <summary>클라이언트 연결을 위한 쿠키를 가져옵니다.</summary>
      <returns>클라이언트 연결을 위한 쿠키입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Environment">
      <summary>Owin 환경을 가져옵니다.</summary>
      <returns>Owin 환경입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Headers">
      <summary>요청에 대한 헤더를 가져오거나 설정합니다.</summary>
      <returns>요청에 대한 헤더입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.LocalPath">
      <summary>URL의 로컬 경로 부분을 가져옵니다.</summary>
      <returns>URL의 로컬 경로 부분입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.QueryString">
      <summary>IRequest 쿼리 문자열 변수 컬렉션을 가져옵니다.</summary>
      <returns>IRequest 쿼리 문자열 변수 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.IRequest.ReadForm">
      <summary>http 요청 양식을 읽습니다.</summary>
      <returns>읽을 http 요청 양식입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.Url">
      <summary>IRequest에 대한 URI를 가져옵니다.</summary>
      <returns>IRequest에 대한 URI입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.IRequest.User">
      <summary>IRequest에 대한 주체 사용자를 가져옵니다.</summary>
      <returns>IRequest에 대한 주체 사용자입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.IUserIdProvider"></member>
    <member name="M:Microsoft.AspNet.SignalR.IUserIdProvider.GetUserId(Microsoft.AspNet.SignalR.IRequest)"></member>
    <member name="T:Microsoft.AspNet.SignalR.PersistentConnection">
      <summary> 클라이언트와 서버 간의 연결을 나타냅니다. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.AckHandler">
      <summary>이 연결의 Ack 처리기를 가져오거나 설정합니다.</summary>
      <returns>이 연결의 Ack 처리기입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.Authorize(Microsoft.AspNet.SignalR.IRequest)">
      <summary>이 연결에 대한 권한이 부여되었는지 확인합니다.</summary>
      <returns>연결에 대한 권한이 부여되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="request">요청입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.AuthorizeRequest(Microsoft.AspNet.SignalR.IRequest)">
      <summary>연결 요청에 대한 권한이 부여되었는지 확인합니다.</summary>
      <returns>연결 요청에 대한 권한이 부여되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="request">요청입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Connection">
      <summary>연결을 가져오거나 설정합니다.</summary>
      <returns>연결입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Counters">
      <summary>성능 카운터 관리자를 가져오거나 설정합니다.</summary>
      <returns>성능 카운터 관리자입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.GetSignals(System.String,System.String)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />에서 사용된 신호를 반환합니다.</summary>
      <returns>이 <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />에 사용된 신호입니다.</returns>
      <param name="userId">현재 연결의 사용자 ID입니다.</param>
      <param name="connectionId">들어오는 연결의 ID입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Groups">
      <summary>연결 그룹을 가져오거나 설정합니다.</summary>
      <returns>연결 그룹입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.Initialize(Microsoft.AspNet.SignalR.IDependencyResolver)"></member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.JsonSerializer">
      <summary>JSON 직렬 변환기를 가져오거나 설정합니다.</summary>
      <returns>JSON 직렬 변환기입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.MessageBus">
      <summary>연결에 대한 메시지 버스를 가져오거나 설정합니다.</summary>
      <returns>연결에 대한 메시지 버스입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnConnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>새 연결이 만들어질 때 호출됩니다.</summary>
      <returns>연결 작업이 완료될 때 완료되는 <see cref="T:System.Threading.Tasks.Task" />입니다.</returns>
      <param name="request">현재 연결에 대한 요청입니다.</param>
      <param name="connectionId">다시 연결 중인 클라이언트의 ID입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnDisconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>연결이 끊어질 때 호출됩니다.</summary>
      <returns>연결 끊기 작업이 완료될 때 완료되는 <see cref="T:System.Threading.Tasks.Task" />입니다.</returns>
      <param name="request">현재 연결에 대한 요청입니다.</param>
      <param name="connectionId">연결이 끊어진 클라이언트의 ID입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnReceived(Microsoft.AspNet.SignalR.IRequest,System.String,System.String)">
      <summary>연결로부터 데이터가 수신될 때 호출됩니다.</summary>
      <returns>수신 작업이 완료될 때 완료되는 <see cref="T:System.Threading.Tasks.Task" />입니다.</returns>
      <param name="request">현재 연결에 대한 요청입니다.</param>
      <param name="connectionId">데이터를 보내는 연결의 ID입니다.</param>
      <param name="data">연결에 전송된 페이로드입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnReconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>시간 초과 이후 연결이 다시 연결될 때 호출됩니다.</summary>
      <returns>다시 연결 작업이 완료될 때 완료되는 <see cref="T:System.Threading.Tasks.Task" />입니다.</returns>
      <param name="request">현재 연결에 대한 요청입니다.</param>
      <param name="connectionId">다시 연결 중인 클라이언트의 ID입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.OnRejoiningGroups(Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.String)">
      <summary>다시 가입시켜야 할 그룹을 결정하기 위해, 시간 초과 이후 연결이 다시 연결될 때 호출됩니다.</summary>
      <returns>다시 연결될 때 가입시켜야 하는 그룹 이름 컬렉션입니다.</returns>
      <param name="request">현재 연결에 대한 요청입니다.</param>
      <param name="groups">호출 연결 클레임이 일부에 해당되는 그룹입니다.</param>
      <param name="connectionId">다시 연결 중인 클라이언트의 ID입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.ProcessRequest(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />에 대한 모든 요청을 처리합니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> 파이프라인이 완료될 때 완료되는 <see cref="T:System.Threading.Tasks.Task" />입니다.</returns>
      <param name="context">현재 요청에 대한 <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />입니다.</param>
      <exception cref="InvalidOperationException">연결이 초기화되지 않은 경우 발생됩니다.전송이 지정되지 않은 경우 발생됩니다.연결 ID가 지정되지 않은 경우 발생됩니다.</exception>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.PersistentConnection.ProcessRequest(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>OWIN 진입점입니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.ProtectedData">
      <summary>이 연결의 보호된 데이터를 가져오거나 설정합니다.</summary>
      <returns>이 연결의 보호된 데이터입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Trace">
      <summary>연결 원본을 가져옵니다.</summary>
      <returns>연결 원본입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.TraceManager">
      <summary>추적 관리자를 가져오거나 설정합니다.</summary>
      <returns>추적 관리자입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.Transport">
      <summary>연결과 연관된 전송을 가져오거나 설정합니다.</summary>
      <returns>이 연결과 연관된 전송입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.PersistentConnection.UserIdProvider"></member>
    <member name="T:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager">
      <summary>서버 기본 구성 관리자에 대한 액세스를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.ConnectionTimeout">
      <summary>시간 초과 전까지 연결이 열린 상태로 유지되는 시간을 나타내는 TimeSpan을 가져오거나 설정합니다.</summary>
      <returns>시간 초과 전까지 연결이 열린 상태로 유지되는 시간을 나타내는 TimeSpan입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.DefaultMessageBufferSize">
      <summary>특정 신호에 대해 버퍼링할 메시지 수를 가져오거나 설정합니다.</summary>
      <returns>특정 신호에 대해 버퍼링할 메시지 수입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.DisconnectTimeout">
      <summary>연결이 사라진 후 연결 끊기 이벤트가 발생하기 전까지의 대기 시간을 나타내는 TimeSpan을 가져오거나 설정합니다.</summary>
      <returns>연결이 사라진 후 연결 끊기 이벤트가 발생하기 전까지의 대기 시간을 나타내는 TimeSpan입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.KeepAlive">
      <summary>연결 유지 메시지를 보내는 시간 간격을 나타내는 TimeSpan을 가져오거나 설정합니다.사용하도록 설정한 경우 이 값은 2초 이상이어야 합니다.사용하지 않도록 설정하려면 null로 설정합니다.</summary>
      <returns>연결 유지 메시지를 보내는 시간 간격을 나타내는 TimeSpan입니다.사용하도록 설정한 경우 이 값은 2초 이상이어야 합니다.사용하지 않도록 설정하려면 null로 설정합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.LongPollDelay"></member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager.TransportConnectTimeout"></member>
    <member name="T:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager">
      <summary>서버 구성에 대한 액세스를 제공합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.ConnectionTimeout">
      <summary>시간 초과 전까지 연결이 열린 상태로 유지되는 시간을 나타내는 <see cref="T:System.TimeSpan" />을 가져오거나 설정합니다.</summary>
      <returns>시간 초과 전까지 연결이 열린 상태로 유지되는 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.DefaultMessageBufferSize">
      <summary>특정 신호에 대해 버퍼링할 메시지 수를 가져오거나 설정합니다.</summary>
      <returns>특정 신호에 대해 버퍼링할 메시지 수입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.DisconnectTimeout">
      <summary>연결이 사라진 후 연결 끊기 이벤트가 발생하기 전까지의 대기 시간을 나타내는 <see cref="T:System.TimeSpan" />을 가져오거나 설정합니다.</summary>
      <returns>연결이 사라진 후 연결 끊기 이벤트가 발생하기 전까지의 대기 시간을 나타내는 <see cref="T:System.TimeSpan" />입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.KeepAlive">
      <summary>연결 유지 메시지를 보내는 시간 간격을 나타내는 <see cref="T:System.TimeSpan" />을 가져오거나 설정합니다.사용하도록 설정한 경우 이 값은 2초 이상이어야 합니다.사용하지 않도록 설정하려면 null로 설정합니다.</summary>
      <returns>연결 유지 메시지를 보내는 시간 간격을 나타내는 <see cref="T:System.TimeSpan" />입니다.사용하도록 설정한 경우 이 값은 2초 이상이어야 합니다.사용하지 않도록 설정하려면 null로 설정합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.LongPollDelay">
      <summary>서버에서 데이터가 전송된 이후 긴 폴링 연결이 다시 설정되기까지의 클라이언트 대기 시간을 나타내는 <see cref="T:System.TimeSpan" />을 가져오거나 설정합니다.기본값은 0입니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Configuration.IConfigurationManager.TransportConnectTimeout">
      <summary>다른 전송으로 변경하거나 실패하기 전에 클라이언트에서 연결을 허용해야 하는 시간을 나타내는 <see cref="T:System.TimeSpan" />을 가져오거나 설정합니다.기본값은 5초입니다.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.HostContext">
      <summary>SignalR 호스트의 컨텍스트를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostContext.#ctor(Microsoft.AspNet.SignalR.IRequest,Microsoft.AspNet.SignalR.Hosting.IResponse)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="environment">SignalR 호스트의 환경입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Environment">
      <summary>SignalR 호스트의 환경을 가져옵니다.</summary>
      <returns>SignalR 호스트의 환경입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Request"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.HostContext.Response"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.HostDependencyResolverExtensions">
      <summary>종속성 확인자 확장에 대한 호스트를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.HostDependencyResolverExtensions.InitializeHost(Microsoft.AspNet.SignalR.IDependencyResolver,System.String,System.Threading.CancellationToken)">
      <summary>종속성 확인자 확장에 대한 호스트를 초기화합니다.</summary>
      <param name="resolver">IDependencyResolver입니다.</param>
      <param name="instanceName">인스턴스 이름입니다.</param>
      <param name="hostShutdownToken">호스트 종료 토큰입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.INameValueCollection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.Get(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.GetValues(System.String)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.INameValueCollection.Item(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.IResponse">
      <summary>클라이언트에 대한 연결을 나타냅니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.IResponse.CancellationToken">
      <summary>클라이언트의 수명을 나타내는 취소 토큰을 가져옵니다.</summary>
      <returns>클라이언트의 수명을 나타내는 취소 토큰입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hosting.IResponse.ContentType">
      <summary>응답의 콘텐츠 형식을 가져오거나 설정합니다.</summary>
      <returns>응답의 콘텐츠 형식입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.IResponse.Flush">
      <summary>버퍼링된 응답을 클라이언트로 플러시합니다.</summary>
      <returns>데이터가 플러시된 경우를 나타내는 작업입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.IResponse.Write(System.ArraySegment{System.Byte})">
      <summary>버퍼링된 데이터를 씁니다.</summary>
      <param name="data">버퍼에 쓸 데이터입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" /> 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="resolver">
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />을 만들 때 사용할 종속성 확인자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory.CreateInstance(System.Type)">
      <summary>종속성 확인자나 유형의 기본 생성자를 사용하여, 지정된 유형의 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />의 인스턴스입니다.</returns>
      <param name="connectionType">만들 <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />의 유형입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hosting.ResponseExtensions">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hosting.IResponse" />에 대한 확장 메서드입니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hosting.ResponseExtensions.End(Microsoft.AspNet.SignalR.Hosting.IResponse,System.String)">
      <summary>선택적 데이터가 포함된 클라이언트에 대한 연결을 닫습니다.</summary>
      <returns>연결이 닫힌 경우를 나타내는 작업입니다.</returns>
      <param name="response">
        <see cref="T:Microsoft.AspNet.SignalR.Hosting.IResponse" />입니다.</param>
      <param name="data">연결에 쓸 데이터입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hub" /> 클래스의 권한 부여 특성을 적용하여, 허브에서 보낸 메시지를 클라이언트에서 받을 수 있는지 여부를 결정합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.#ctor(Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection,Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="globalConnectionAuthorizer">전역 연결 권한 부여자입니다.</param>
      <param name="globalInvocationAuthorizer">전역 호출 권한 부여자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>클라이언트가 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />에 의해 설명된 허브에 속하는 신호를 구독하기 전에 호출될 함수를 래핑합니다.기본적으로 <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />은 설명된 허브에 대한 메서드 호출을 구독할 권한이 클라이언트에 부여되었는지 확인하기 위해 허브의 특성을 찾습니다.이 함수는 클라이언트 쪽 허브 메서드 호출을 구독할 권한이 클라이언트에 부여되어 있으면 true를 반환하며 그렇지 않으면 false를 반환합니다.</summary>
      <returns>설명된 허브에 연결할 권한이 클라이언트에 부여되었는지 여부를 지정하는 래핑된 함수입니다.</returns>
      <param name="authorizeConnect">설명된 허브에 연결할 권한이 클라이언트에 부여되었는지 여부를 지정하는 함수입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>서버 쪽 허브 메서드가 호출되는 함수를 래핑합니다.허브와 연결할 권한이 클라이언트에 부여되지 않은 경우라도, 호출 매개 변수를 실행하지 않음으로써 <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" />에서 금지하지 않는 한 클라이언트는 해당 허브에서 서버 쪽 메서드를 호출할 권한을 부여받을 수 있습니다.</summary>
      <returns>서버 쪽 허브 메서드를 호출하는 래핑된 함수입니다.</returns>
      <param name="invoke">서버 쪽 허브 메서드를 호출하는 함수입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation">
      <summary>클라이언트 쪽 허브 메서드 호출을 설명합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Args">
      <summary>클라이언트 쪽 허브 메서드를 호출하는 데 사용되는 인수 목록을 가져오거나 설정합니다.</summary>
      <returns>클라이언트 쪽 허브 메서드와 연관된 인수 목록입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Hub">
      <summary>호출되는 메서드가 속하는 허브의 이름을 가져오거나 설정합니다.</summary>
      <returns>호출되는 메서드가 속하는 허브의 이름입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.Method">
      <summary>호출되는 클라이언트 쪽 허브 메서드의 이름을 가져오거나 설정합니다.</summary>
      <returns>호출되는 클라이언트 쪽 허브 메서드의 이름입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation.State">
      <summary>허브 상태가 마지막으로 클라이언트에 전송된 이후 변경된 서버에서의 허브 상태를 나타내는 키-값 저장소를 가져오거나 설정합니다.</summary>
      <returns>서버에서의 허브 상태를 나타내는 키-값 저장소입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ClientProxy">
      <summary>클라이언트 쪽 허브에 대한 서버 쪽 프록시를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.Invoke(System.String,System.Object[])">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.ClientProxy" /> 인스턴스에 의해 표현된 연결에서 메서드를 호출합니다.</summary>
      <returns>데이터가 클라이언트로 전송된 경우를 나타내는 작업입니다.</returns>
      <param name="method">호출할 메서드의 이름입니다.</param>
      <param name="args">클라이언트에 전달될 인수입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>
        <see cref="M:Microsoft.AspNet.SignalR.Hubs.ClientProxy.Invoke(System.String,System.Object[])" /> 메서드를 실행합니다.</summary>
      <returns>항상 true입니다.</returns>
      <param name="binder">클라이언트 쪽 허브 작업에 대한 세부 정보와 바인딩 의미가 포함된 정보입니다.</param>
      <param name="args">호출 작업 시 개체 구성원에 전달되는 인수입니다.</param>
      <param name="result">메서드가 반환될 때 구성원 호출의 결과가 포함됩니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ConnectionIdProxy">
      <summary>클라이언트 쪽 허브에 대한 연결 ID 프록시를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ConnectionIdProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String[])"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator">
      <summary>기본 어셈블리 로케이터를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator.GetAssemblies">
      <summary>현재 응용 프로그램 도메인에 로드된 어셈블리를 가져옵니다.</summary>
      <returns>현재 응용 프로그램 도메인의 어셈블리 배열입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator">
      <summary>SignalR 허브의 기본 활성기를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="resolver">종속성 확인자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator.Create(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>새 허브 활성기를 만듭니다.</summary>
      <returns>만든 허브 활성기입니다.</returns>
      <param name="descriptor">설명자입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager">
      <summary>기본 허브 관리자를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="resolver">허브 확인자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHub(System.String)">
      <summary>단일 허브 설명자를 검색합니다.</summary>
      <returns>찾은 경우 허브 설명자이고, 그렇지 않으면 null입니다.</returns>
      <param name="hubName">허브의 이름입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubMethod(System.String,System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>지정된 허브에서 지정된 이름의 메서드를 검색합니다.</summary>
      <returns>메서드에 대한 설명자입니다(있는 경우).그렇지 않으면 null입니다.</returns>
      <param name="hubName">허브의 이름입니다.</param>
      <param name="method">찾을 메서드의 이름입니다.</param>
      <param name="parameters">일치하는지 확인할 메서드 매개 변수입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubMethods(System.String,System.Func{Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Boolean})">
      <summary>지정된 허브에서 호출 가능한 모든 메서드를 가져옵니다.</summary>
      <returns>사용 가능한 메서드 목록입니다.</returns>
      <param name="hubName">허브의 이름입니다.</param>
      <param name="predicate">필터링 결과의 조건자입니다(옵션).</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.GetHubs(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.Boolean})">
      <summary>지정된 조건자와 일치하는 모든 사용 가능한 허브를 검색합니다.</summary>
      <returns>허브 설명자 목록입니다.</returns>
      <param name="predicate">조건자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.ResolveHub(System.String)">
      <summary>지정된 허브 이름을 구체적인 개체로 확인합니다.</summary>
      <returns>허브 구현 인스턴스입니다(있는 경우).그렇지 않으면 null입니다.</returns>
      <param name="hubName">허브의 이름입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultHubManager.ResolveHubs">
      <summary>사용 가능한 모든 허브를 구체적인 개체로 확인합니다.</summary>
      <returns>허브 인스턴스 목록입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator">
      <summary>기본 Javascript 프록시에 대한 생성기를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.#ctor(Microsoft.AspNet.SignalR.Hubs.IHubManager,Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="manager">허브 관리자입니다.</param>
      <param name="javaScriptMinifier">JavaScript Minifier입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="resolver">종속성 확인자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>지정된 프록시를 생성합니다.</summary>
      <returns>생성된 프록시입니다.</returns>
      <param name="serviceUrl">서비스 URL입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator.GenerateProxy(System.String,System.Boolean)">
      <summary>지정된 프록시를 생성합니다.</summary>
      <returns>생성된 프록시입니다.</returns>
      <param name="serviceUrl">서비스 URL입니다.</param>
      <param name="includeDocComments">Doc 주석을 포함하려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver">
      <summary>허브 매개 변수의 기본 확인자를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.ResolveMethodParameters(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>제공된 개체를 바탕으로 메서드 매개 변수 값을 확인합니다.</summary>
      <returns>매개 변수 값 목록입니다.</returns>
      <param name="method">메서드 설명자입니다.</param>
      <param name="values">매개 변수 값을 확인할 값 목록입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver.ResolveParameter(Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor,Microsoft.AspNet.SignalR.Json.IJsonValue)">
      <summary>제공된 개체를 바탕으로 매개 변수 값을 확인합니다.</summary>
      <returns>매개 변수 값입니다.</returns>
      <param name="descriptor">매개 변수 설명자입니다.</param>
      <param name="value">매개 변수 값을 확인할 값입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.Descriptor">
      <summary>허브 정보를 설명합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.Descriptor.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.Descriptor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.Descriptor.Name">
      <summary>허브 이름을 가져오거나 설정합니다.</summary>
      <returns>허브 이름입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.Descriptor.NameSpecified">
      <summary>허브 특성 이름이 지정되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>허브 특성 이름이 지정되었으면 true, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary">
      <summary>키-값 쌍을 저장하는 사전 개체를 포함하고 새 구문을 지원하는 TrySetMember 및 TryGetMember 메서드를 재정의합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="obj">사전 개체입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>지정된 키/값 쌍 개체를 사전에 추가합니다.</summary>
      <param name="item">추가할 키/값 쌍 개체입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Add(System.String,System.Object)">
      <summary>지정된 키 및 값을 사전에 추가합니다.</summary>
      <param name="key">추가할 요소의 키입니다.</param>
      <param name="value">추가할 요소의 값입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Clear">
      <summary>사전에서 모든 키와 값을 제거합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>사전에 특정 키/값 쌍 항목이 포함되어 있는지 확인합니다.</summary>
      <returns>사전에 지정된 값을 사용하는 요소가 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="item">사전에서 찾을 키/값 쌍 항목입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.ContainsKey(System.String)">
      <summary>사전에 지정된 키가 포함되어 있는지 확인합니다.</summary>
      <returns>사전에 지정된 키가 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">사전에서 찾을 키입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>지정된 배열 인덱스에서 시작하는 기존 1차원 배열에 키/값 쌍 요소를 복사합니다.</summary>
      <param name="array">사전에서 복사한 요소의 대상인 1차원 배열입니다.</param>
      <param name="arrayIndex">배열에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Count">
      <summary>사전의 항목 수를 가져옵니다.</summary>
      <returns>사전의 항목 수입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.GetEnumerator">
      <summary>사전 전체를 반복하는 열거자를 반환합니다.</summary>
      <returns>사전 전체를 반복하는 열거자입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.IsReadOnly">
      <summary>동적 사전이 읽기 전용인지 여부를 가져옵니다.</summary>
      <returns>동적 사전이 읽기 전용이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Item(System.String)">
      <summary>사전에서 특정 키가 있는 항목을 가져오거나 설정합니다.</summary>
      <returns>사전에서 특정 키가 있는 항목입니다.</returns>
      <param name="key">항목의 키입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Keys">
      <summary>사전에 포함된 키 컬렉션을 가져옵니다.</summary>
      <returns>사전에 포함된 키 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>사전에서 특정 키/값 쌍 항목을 제거합니다.</summary>
      <returns>항목이 제거된 사전입니다.</returns>
      <param name="item">제거할 항목입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Remove(System.String)">
      <summary>사전에서 특정 키를 제거합니다.</summary>
      <returns>키가 제거된 사전입니다.</returns>
      <param name="key">제거할 키입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>컬렉션 전체를 반복하는 열거자를 반환합니다.</summary>
      <returns>컬렉션 전체를 반복하는 열거자입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>멤버 값을 가져오는 작업에 대한 구현을 제공합니다.</summary>
      <returns>작업에 성공하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="binder">동적 작업을 호출한 개체에 대한 정보를 제공합니다.</param>
      <param name="result">get 작업의 결과입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TryGetValue(System.String,System.Object@)">
      <summary>지정된 키와 연결된 값을 가져옵니다.</summary>
      <returns>사전에 지정된 키가 있는 요소가 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">가져올 값의 키입니다.</param>
      <param name="value">이 메서드가 반환될 때 지정된 키가 있으면 해당 키와 연관된 값을 포함하고, 그렇지 않으면 값 매개 변수의 형식에 대한 기본값입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>멤버 값을 설정하는 작업에 대한 구현을 제공합니다.</summary>
      <returns>작업에 성공하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="binder">동적 작업을 호출한 개체에 대한 정보를 제공합니다.</param>
      <param name="value">멤버에 설정할 값입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Unwrap(System.Object)">
      <summary>사전과 연관된 지정된 값을 래핑 해제합니다.</summary>
      <returns>래핑 해제한 값입니다.</returns>
      <param name="value">래핑 해제할 값입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Values">
      <summary>사전에 포함된 값 컬렉션을 가져옵니다.</summary>
      <returns>사전에 포함된 값 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.DynamicDictionary.Wrap(System.Object)">
      <summary>사전과 연관된 지정된 값을 래핑합니다.</summary>
      <returns>래핑한 값입니다.</returns>
      <param name="value">래핑할 값입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator">
      <summary>빈 Javascript 프록시에 대한 생성기를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>지정된 URL로 프록시를 생성합니다.</summary>
      <returns>생성된 프록시입니다.</returns>
      <param name="serviceUrl">서비스 URL입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator">
      <summary>어셈블리 로케이터와 연관된 열거 가능 항목을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="assemblies">어셈블리입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator.GetAssemblies">
      <summary>어셈블리 목록을 반환합니다.</summary>
      <returns>어셈블리 목록입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ExceptionContext"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.#ctor(System.Exception)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.Error">
      <summary>호출 클라이언트로 보낼 예외입니다.오류가 <see cref="T:Microsoft.AspNet.SignalR.HubException" />이거나 <see cref="P:Microsoft.AspNet.SignalR.HubConfiguration.EnableDetailedErrors" />가 true로 설정되지 않은 한 이 예외는 제네릭 예외로 재정의됩니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ExceptionContext.Result">
      <summary>오류 발생 대신에 반환할 값입니다.결과가 설정될 때마다 오류는 null로 설정됩니다.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.GroupProxy">
      <summary>허브에서 사용되는 신호 프록시 그룹을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.GroupProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext">
      <summary>클라이언트의 호출 컨텍스트를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.#ctor(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="request">현재 HTTP 요청입니다.</param>
      <param name="connectionId">연결 ID입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.ConnectionId">
      <summary>호출 클라이언트의 연결 ID를 가져옵니다.</summary>
      <returns>호출 클라이언트의 연결 ID입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.Headers">
      <summary>요청에 대한 헤더를 가져옵니다.</summary>
      <returns>요청에 대한 헤더입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.QueryString">
      <summary>요청에 대한 쿼리 문자열을 가져옵니다.</summary>
      <returns>요청에 대한 쿼리 문자열입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.Request">
      <summary>현재 HTTP 요청에 대한 <see cref="T:Microsoft.AspNet.SignalR.IRequest" />를 가져옵니다.</summary>
      <returns>현재 HTTP 요청에 대한 <see cref="T:Microsoft.AspNet.SignalR.IRequest" />입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.RequestCookies">
      <summary>요청에 대한 쿠키를 가져옵니다.</summary>
      <returns>요청에 대한 쿠키입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubCallerContext.User">
      <summary>요청에 대한 <see cref="T:System.Security.Principal.IPrincipal" />을 가져옵니다.</summary>
      <returns>요청에 대한 <see cref="T:System.Security.Principal.IPrincipal" />입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />의 각 SignalR 연결에 대한 모든 정보를 캡슐화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.#ctor(Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,Microsoft.AspNet.SignalR.IConnection,System.String,System.String,Microsoft.AspNet.SignalR.Hubs.StateChangeTracker)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pipelineInvoker">파이프라인 호출자입니다.</param>
      <param name="connection">인터페이스 연결입니다.</param>
      <param name="hubName">허브의 이름입니다.</param>
      <param name="connectionId">연결 ID입니다.</param>
      <param name="tracker">상태 변경 추적기입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.Caller">
      <summary>호출 클라이언트를 가져오거나 설정합니다.</summary>
      <returns>호출 클라이언트입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.Others">
      <summary>호출 클라이언트를 제외한 연결된 모든 클라이언트를 가져오거나 설정합니다.</summary>
      <returns>호출 클라이언트를 제외한 연결된 모든 클라이언트입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.OthersInGroup(System.String)">
      <summary>호출 클라이언트를 제외한, 그룹 내 모든 클라이언트에 대한 동적 표현을 반환합니다.</summary>
      <returns>호출 클라이언트를 제외한, 그룹 내 모든 클라이언트에 대한 동적 표현입니다.</returns>
      <param name="groupName">그룹의 이름입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContext.OthersInGroups(System.Collections.Generic.IList{System.String})">
      <summary>호출 클라이언트를 제외한, 지정된 그룹 내 모든 클라이언트에 대한 동적 표현을 반환합니다.</summary>
      <returns>호출 클라이언트를 제외한, 그룹 내 모든 클라이언트에 대한 동적 표현입니다.</returns>
      <param name="groupNames">그룹의 이름입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.All"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.AllExcept(System.String[])">
      <summary>지정된 호출 클라이언트를 제외한 모든 클라이언트에 대한 동적 표현을 반환합니다.</summary>
      <returns>지정된 호출 클라이언트를 제외한 모든 클라이언트에 대한 동적 표현입니다.</returns>
      <param name="excludeConnectionIds">제외할 연결 ID 목록입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Client(System.String)">
      <summary>지정된 연결 ID가 사용된 연결의 동적 표현을 반환합니다.</summary>
      <returns>지정된 클라이언트의 동적 표현입니다.</returns>
      <param name="connectionId">연결 ID입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Clients(System.Collections.Generic.IList{System.String})">
      <summary>지정된 연결 ID가 사용된 연결의 동적 표현을 반환합니다.</summary>
      <returns>지정된 클라이언트의 동적 표현입니다.</returns>
      <param name="connectionIds">연결 ID입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Connection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Group(System.String,System.String[])">
      <summary>지정된 그룹의 동적 표현을 반환합니다.</summary>
      <returns>지정된 그룹의 동적 표현입니다.</returns>
      <param name="groupName">그룹의 이름입니다.</param>
      <param name="excludeConnectionIds">제외할 연결 ID 목록입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Groups(System.Collections.Generic.IList{System.String},System.String[])">
      <summary>지정된 그룹의 동적 표현을 반환합니다.</summary>
      <returns>지정된 그룹의 동적 표현입니다.</returns>
      <param name="groupNames">그룹의 이름입니다.</param>
      <param name="excludeConnectionIds">제외할 연결 ID 목록입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.HubName"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.Invoker"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase.User(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor">
      <summary>단일 허브에 대한 정보를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.CreateQualifiedName(System.String)">
      <summary>정규화되지 않은 지정된 이름을 사용하여 허브의 정규화된 이름을 만듭니다.</summary>
      <returns>만든 정규화된 이름입니다.</returns>
      <param name="unqualifiedName">정규화되지 않은 이름입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubDescriptor.HubType">
      <summary>허브 유형을 가져오거나 설정합니다.</summary>
      <returns>허브 유형입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher">
      <summary>허브 영구 연결을 통해 모든 통신을 처리합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.#ctor(Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="configuration">JS 프록시를 사용하도록 설정하고 클라이언트에 자세한 허브 오류를 제공할지 여부를 결정하는 구성 설정입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.AuthorizeRequest(Microsoft.AspNet.SignalR.IRequest)">
      <summary>지정된 연결 요청에 대한 권한이 부여된 허브 목록을 빌드합니다.</summary>
      <returns>권한이 부여된 허브가 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="request">현재 연결에 대한 요청입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.GetSignals(System.String,System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.Initialize(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>호스트에서 호출되며 IDependencyResolver에 대한 허브 발송을 초기화합니다.</summary>
      <param name="resolver">IDependency 확인자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnConnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>연결이 이 허브 인스턴스에 연결될 때 호출됩니다.</summary>
      <returns>연결이 이 허브 인스턴스에 연결될 때 호출되는 작업입니다.</returns>
      <param name="request">현재 연결에 대한 IRequest입니다.</param>
      <param name="connectionId">다시 연결 중인 클라이언트의 ID입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnDisconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>연결이 이 허브 인스턴스와 끊어질 때 호출됩니다.</summary>
      <returns>이 허브 인스턴스에서 연결이 끊어질 때 호출되는 작업입니다.</returns>
      <param name="request">현재 연결에 대한 IRequest입니다.</param>
      <param name="connectionId">다시 연결 중인 클라이언트의 ID입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnReceived(Microsoft.AspNet.SignalR.IRequest,System.String,System.String)">
      <summary>허브의 들어오는 메서드 호출을 처리합니다.</summary>
      <returns>이 허브 인스턴스에서 데이터가 수신될 때 호출되는 작업입니다.</returns>
      <param name="request">현재 연결에 대한 IRequest입니다.</param>
      <param name="connectionId">다시 연결 중인 클라이언트의 ID입니다.</param>
      <param name="data">수신된 데이터입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnReconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
      <summary>연결이 이 허브 인스턴스에 다시 연결될 때 호출됩니다.</summary>
      <returns>연결이 이 허브 인스턴스에 다시 연결될 때 호출되는 작업입니다.</returns>
      <param name="request">현재 연결에 대한 IRequest입니다.</param>
      <param name="connectionId">다시 연결 중인 클라이언트의 ID입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.OnRejoiningGroups(Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.String)">
      <summary>다시 가입시켜야 할 그룹을 결정하기 위해, 시간 초과 이후 연결이 다시 연결될 때 호출됩니다.</summary>
      <returns>다시 가입시켜야 할 그룹을 결정하기 위해, 시간 초과 이후 다시 연결하는 데 사용되는 연결 목록입니다.</returns>
      <param name="request">현재 연결에 대한 IRequest입니다.</param>
      <param name="groups">호출 연결 클레임이 일부에 해당되는 그룹입니다.</param>
      <param name="connectionId">다시 연결 중인 클라이언트의 ID입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.ProcessRequest(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>HostContext에 대한 모든 요청을 처리합니다.</summary>
      <returns>HostContext에 대한 모든 요청을 처리하는 작업입니다.</returns>
      <param name="context">호스트 컨텍스트입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubDispatcher.Trace">
      <summary>응용 프로그램에서 코드 실행을 추적하고 트리 메시지를 해당 원본과 연결할 수 있는 허브 연결을 가져옵니다.</summary>
      <returns>응용 프로그램에서 코드 실행을 추적하고 트리 메시지를 해당 원본과 연결할 수 있는 허브 연결입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions">
      <summary>전체 허브 프로세스에 허브 관리자 확장을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.EnsureHub(Microsoft.AspNet.SignalR.Hubs.IHubManager,System.String,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter[])">
      <summary>허브 설명자에 대한 모든 정보를 확인합니다.</summary>
      <returns>모든 정보를 확인하는 허브 설명자입니다.</returns>
      <param name="hubManager">허브 관리자입니다.</param>
      <param name="hubName">허브의 이름입니다.</param>
      <param name="counters">성능 카운터입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.GetHubMethods(Microsoft.AspNet.SignalR.Hubs.IHubManager,System.String)">
      <summary>지정된 허브에서 호출 가능한 모든 메서드를 가져옵니다.</summary>
      <returns>지정된 허브에서 호출하는 메서드 컬렉션입니다.</returns>
      <param name="hubManager">허브 관리자입니다.</param>
      <param name="hubName">허브의 이름입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions.GetHubs(Microsoft.AspNet.SignalR.Hubs.IHubManager)">
      <summary>사용 가능한 모든 허브를 검색합니다.</summary>
      <returns>사용 가능한 모든 허브의 검색입니다.</returns>
      <param name="hubManager">허브 관리자입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute">
      <summary>허브에 대한 메서드 이름 특성을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="methodName">메서드의 이름입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute.MethodName">
      <summary>메서드 이름을 가져오거나 설정합니다.</summary>
      <returns>메서드 이름입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute">
      <summary>허브 이름에 특성을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="hubName">허브의 이름입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubNameAttribute.HubName">
      <summary>허브 이름을 가져오거나 설정합니다.</summary>
      <returns>허브의 이름입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule">
      <summary>IHubPipelineModule을 간단하게 구현할 수 있는 일반 기본 클래스입니다.모듈은 연결하기, 다시 연결하기, 연결 끊기, 서버 쪽 허브 메서드 호출하기, 클라이언트 쪽 허브 메서드 호출하기, 허브 클라이언트 권한 부여하기 및 허브 그룹에 다시 가입하기 등의 다양한 허브 처리 단계를 가로채 사용자 지정할 수 있습니다.모듈은 <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" />을 호출함으로써 활성화됩니다.<see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />에 추가된 통합 모듈은 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" /> 인터페이스를 통해 호출됩니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>클라이언트가 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />에 의해 설명된 허브에 속하는 신호를 구독하기 전에 호출될 함수를 래핑합니다.기본적으로 <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />은 설명된 허브에 대한 메서드 호출을 구독할 권한이 클라이언트에 부여되었는지 확인하기 위해 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />의 특성을 찾습니다.이 함수는 클라이언트 쪽 허브 메서드 호출을 구독할 권한이 클라이언트에 부여되어 있으면 true를 반환하며 그렇지 않으면 false를 반환합니다.</summary>
      <returns>설명된 허브에 연결할 권한이 클라이언트에 부여되었는지 여부를 지정하는 래핑된 함수입니다.</returns>
      <param name="authorizeConnect">설명된 허브에 연결할 권한이 클라이언트에 부여되었는지 여부를 지정하는 함수입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>클라이언트가 연결될 각 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />에 연결될 때 호출되는 함수를 래핑합니다.기본적으로 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />의 OnConnected 메서드가 호출됩니다.</summary>
      <returns>클라이언트가 허브에 연결될 때 호출되는 래핑된 함수입니다.</returns>
      <param name="connect">클라이언트가 허브에 연결될 때 호출되는 함수입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildDisconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>클라이언트가 연결된 각 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />와 연결이 끊어질 때 호출되는 함수를 래핑합니다.기본적으로 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />의 OnDisconnected 메서드가 호출됩니다.</summary>
      <returns>클라이언트가 허브와의 연결이 끊어질 때 호출되는 래핑된 함수입니다.</returns>
      <param name="disconnect">클라이언트가 허브와의 연결이 끊어질 때 호출되는 함수입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>서버 쪽 허브 메서드가 호출되는 함수를 래핑합니다.허브와 연결할 권한이 클라이언트에 부여되지 않은 경우라도, 호출 매개 변수를 실행하지 않음으로써 <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" />에서 금지하지 않는 한 클라이언트는 해당 허브에서 서버 쪽 메서드를 호출할 권한을 부여받을 수 있습니다.</summary>
      <returns>서버 쪽 허브 메서드를 호출하는 래핑된 함수입니다.</returns>
      <param name="invoke">서버 쪽 허브 메서드를 호출하는 함수입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildOutgoing(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext,System.Threading.Tasks.Task})">
      <summary>클라이언트 쪽 허브 메서드가 호출되는 함수를 래핑합니다.</summary>
      <returns>클라이언트 쪽 허브 메서드를 호출하는 래핑된 함수입니다.</returns>
      <param name="send">클라이언트 쪽 허브 메서드를 호출하는 함수입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildReconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>클라이언트가 연결될 각 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />에 다시 연결될 때 호출되는 함수를 래핑합니다.기본적으로 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />의 OnReconnected 메서드가 호출됩니다.</summary>
      <returns>클라이언트가 허브에 다시 연결될 때 호출되는 래핑된 함수입니다.</returns>
      <param name="reconnect">클라이언트가 허브에 다시 연결될 때 호출되는 함수입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.BuildRejoiningGroups(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}})">
      <summary>클라이언트가 다시 가입되도록 허용되어야 하는 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />에 의해 설명된 허브에 속하는 그룹을 결정하는 함수를 래핑합니다.기본적으로 서버에 다시 연결되는 클라이언트는 이전에 구성원으로 속해 있던 모든 그룹에서 제거됩니다. 신뢰할 수 없는 클라이언트가 가입이 허용된 적이 없는 그룹의 구성원인 것으로 주장할 수 있기 때문입니다.</summary>
      <returns>클라이언트가 다시 가입되도록 허용되어야 하는 그룹을 결정하는 래핑된 함수입니다.</returns>
      <param name="rejoiningGroups">클라이언트가 다시 가입되도록 허용되어야 하는 그룹을 결정하는 함수입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterConnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>이 메서드는 나중에 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />에 추가된 모듈의 연결 구성 요소가 실행된 이후 및 적어도 <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" />가 실행된 이후에 호출됩니다.</summary>
      <param name="hub">클라이언트가 연결된 허브입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterDisconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>이 메서드는 나중에 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />에 추가된 모듈의 연결 끊기 구성 요소가 실행된 이후에 및 적어도 <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" />가 실행된 이후에 호출됩니다.</summary>
      <param name="hub">클라이언트와의 연결이 끊어진 허브입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterIncoming(System.Object,Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>이 메서드는 나중에 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />에 추가된 모듈의 들어오는 구성 요소와 서버 쪽 허브 메서드가 완전히 실행된 이후에 호출됩니다.</summary>
      <returns>서버 쪽 허브 메서드의 업데이트된 반환 값이거나 새로운 반환 값입니다.</returns>
      <param name="result">서버 쪽 허브 메서드의 반환 값입니다.</param>
      <param name="context">서버 쪽 허브 메서드 호출에 대한 설명입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterOutgoing(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>이 메서드는 나중에 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />에 추가된 모듈의 나가는 구성 요소가 실행된 이후에 호출됩니다.이는 모든 클라이언트가 허브 메서드 호출을 받은 것을 의미하지 않지만 허브 호출 메시지가 메시지 버스에 성공적으로 게시되었음을 나타냅니다.</summary>
      <param name="context">클라이언트 쪽 허브 메서드 호출에 대한 설명입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnAfterReconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>이 메서드는 나중에 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />에 추가된 모듈의 다시 연결 구성 요소가 실행된 이후 및 적어도 <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" />가 실행된 이후에 호출됩니다.</summary>
      <param name="hub">클라이언트가 다시 연결된 허브입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeAuthorizeConnect(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>이 메서드는 나중에 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />에 추가된 모듈의 AuthorizeConnect 구성 요소가 실행되기 전에 호출됩니다.이 메서드에서 false를 반환하면 나중에 추가된 모듈이 실행되지 않으며 클라이언트는 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />에서 정의된 허브에 속하는 메서드에 대한 클라이언트 쪽 호출을 구독할 수 없게 됩니다.</summary>
      <returns>클라이언트에게 허브에 연결할 수 있는 권한이 부여되면 true, 그렇지 않으면 false입니다.</returns>
      <param name="hubDescriptor">클라이언트가 구독하려고 하는 허브에 대한 설명입니다.</param>
      <param name="request">허브를 구독하려고 하는 클라이언트의 연결 요청입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeConnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>이 메서드는 나중에 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />에 추가된 모듈의 연결 구성 요소가 실행되기 전에 호출됩니다.이 메서드가 false를 반환하면 나중에 추가된 모듈과 <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" /> 메서드는 실행되지 않습니다.</summary>
      <returns>나중에 추가된 모듈의 연결 구성 요소와 <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected" /> 메서드가 실행되어야 하면 true, 그렇지 않으면 false입니다.</returns>
      <param name="hub">클라이언트가 연결된 허브입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeDisconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>이 메서드는 나중에 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />에 추가된 모듈의 연결 끊기 구성 요소가 실행되기 전에 호출됩니다.이 메서드가 false를 반환하면 나중에 추가된 모듈과 <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" /> 메서드는 실행되지 않습니다.</summary>
      <returns>나중에 추가된 모듈의 연결 끊기 구성 요소와 <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected" /> 메서드가 실행되어야 하면 true, 그렇지 않으면 false입니다.</returns>
      <param name="hub">클라이언트와의 연결이 끊어진 허브입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeIncoming(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>이 메서드는 나중에 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />에 추가된 모듈의 들어오는 구성 요소가 실행되기 전에 호출됩니다.이 메서드가 false를 반환하면 나중에 추가된 모듈과 서버 쪽 허브 메서드 호출은 실행되지 않습니다.허브와 연결할 수 있는 권한이 클라이언트에 부여되지 않은 경우라도, 호출 매개 변수를 실행하지 않음으로써 <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" />에서 금지하거나 false를 반환하여 <see cref="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeIncoming(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)" />에서 금지하지 않는 한 클라이언트는 해당 허브에서 서버 쪽 메서드를 호출할 수 있는 권한을 부여받을 수 있습니다.</summary>
      <returns>나중에 추가된 모듈의 들어오는 구성 요소와 서버 쪽 허브 메서드 호출이 실행되어야 하면 true, 그렇지 않으면 false입니다.</returns>
      <param name="context">서버 쪽 허브 메서드 호출에 대한 설명입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeOutgoing(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>이 메서드는 나중에 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />에 추가된 모듈의 나가는 구성 요소가 실행되기 전에 호출됩니다.이 메서드가 false를 반환하면 나중에 추가된 모듈과 클라이언트 쪽 허브 메서드 호출은 실행되지 않습니다.</summary>
      <returns>나중에 추가된 모듈의 나가는 구성 요소와 클라이언트 쪽 허브 메서드 호출이 실행되어야 하면 true, 그렇지 않으면 false입니다.</returns>
      <param name="context">클라이언트 쪽 허브 메서드 호출에 대한 설명입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnBeforeReconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>이 메서드는 나중에 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />에 추가된 모듈의 다시 연결 구성 요소가 실행되기 전에 호출됩니다.이 메서드가 false를 반환하면 나중에 추가된 모듈과 <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" /> 메서드는 실행되지 않습니다.</summary>
      <returns>나중에 추가된 모듈의 다시 연결 구성 요소와 <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected" /> 메서드가 실행되어야 하면 true, 그렇지 않으면 false입니다.</returns>
      <param name="hub">클라이언트가 다시 연결된 허브입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubPipelineModule.OnIncomingError(Microsoft.AspNet.SignalR.Hubs.ExceptionContext,Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>이 메서드는 서버 쪽 허브 메서드나 나중에 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />에 추가된 모듈의 들어오는 구성 요소에 의해 확인할 수 없는 예외가 발생된 경우 호출됩니다.이 메서드를 사용하여 예외를 관찰할 경우 다른 모듈로 확산되는 것을 막을 수 없습니다.</summary>
      <param name="exceptionContext">서버 쪽 호출이 실행되는 동안 발생된 예외를 나타냅니다.이 컨텍스트를 사용하여 결과를 설정하거나 오류를 변경할 수 있습니다.</param>
      <param name="invokerContext">서버 쪽 허브 메서드 호출에 대한 설명입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubRequest">
      <summary>허브에 연결된 SignalR 연결 요청과 통신하는 메서드를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubRequest.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Hub">
      <summary>허브 연결 값을 가져오거나 설정합니다.</summary>
      <returns>허브 연결 값입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Id">
      <summary>연결 ID를 가져오거나 설정합니다.</summary>
      <returns>연결 ID입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.Method">
      <summary>요청 메서드를 가져오거나 설정합니다.</summary>
      <returns>요청 메서드입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.ParameterValues">
      <summary>매개 변수 값을 가져오거나 설정합니다.</summary>
      <returns>매개 변수 값입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubRequest.State">
      <summary>현재 요청 상태를 가져오거나 설정합니다.</summary>
      <returns>현재 요청 상태입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.HubResponse">
      <summary>들어오는 허브 요청으로부터 반환된 응답을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.HubResponse.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubResponse" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Error">
      <summary>허브 메서드를 호출한 결과로 발생된 예외를 가져오거나 설정합니다.</summary>
      <returns>허브 메서드를 호출한 결과로 발생된 예외입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.ErrorData">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.HubException" />에 포함된 추가 오류 데이터입니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Id">
      <summary>작업 ID를 가져오거나 설정합니다.</summary>
      <returns>작업 ID입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.IsHubException">
      <summary>오류가 see <see cref="T:Microsoft.AspNet.SignalR.HubException" />인지 여부를 나타냅니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.Result">
      <summary>호출의 결과를 가져오거나 설정합니다.</summary>
      <returns>호출의 결과입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.StackTrace">
      <summary>허브 메서드를 호출한 결과로 발생된 예외에 대한 스택 추적을 가져오거나 설정합니다.</summary>
      <returns>허브 메서드를 호출한 결과로 발생된 예외에 대한 스택 추적입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.HubResponse.State">
      <summary>왕복 이동 상태를 만든 변경 사항을 가져오거나 설정합니다.</summary>
      <returns>왕복 이동 상태를 만든 변경 내용입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAssemblyLocator">
      <summary>어셈블리를 찾고 해당 모듈에 대한 정보를 반환합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAssemblyLocator.GetAssemblies">
      <summary>모듈에서 참조되는 어셈블리 목록을 반환합니다.</summary>
      <returns>모듈에서 참조되는 어셈블리 목록입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection">
      <summary>클라이언트가 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />에 연결되는 권한을 부여할 수 있는 <see cref="T:System.Attribute" />에 의해 구현되는 인터페이스입니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubCallerContext" />를 고려하여, 클라이언트가 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />에 연결되는 권한을 부여받을지 여부를 결정합니다.</summary>
      <returns>호출자에게 허브에 연결할 수 있는 권한이 부여되면 true, 그렇지 않으면 false입니다.</returns>
      <param name="hubDescriptor">연결하려고 하는 허브 클라이언트에 대한 설명입니다.</param>
      <param name="request">클라이언트로부터의 연결 요청입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> 메서드를 호출할 수 있는 권한을 부여할 수 있는 <see cref="T:System.Attribute" />에 의해 구현되는 인터페이스입니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" />를 고려하여, 클라이언트가 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> 메서드를 호출할 수 있는 권한을 부여받는지 여부를 결정합니다.</summary>
      <returns>호출자에게 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> 메서드를 호출할 수 있는 권한이 부여되면 true, 그렇지 않으면 false입니다.</returns>
      <param name="hubIncomingInvokerContext">
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" /> 메서드 호출에 대한 세부 정보를 제공하는 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext" />입니다.</param>
      <param name="appliesToMethod">인터페이스 인스턴스가 메서드에 직접 적용되는 특성인지 여부를 나타냅니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IClientProxy">
      <summary>클라이언트 쪽 허브에 대한 서버 쪽 프록시입니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IClientProxy.Invoke(System.String,System.Object[])">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IClientProxy" /> 인스턴스에 의해 표현된 연결에서 메서드를 호출합니다.</summary>
      <returns>데이터가 클라이언트로 전송된 경우를 나타내는 작업입니다.</returns>
      <param name="method">호출할 메서드의 이름입니다.</param>
      <param name="args">클라이언트에 전달될 인수입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHub">
      <summary>허브에 연결된 SignalR 연결과 통신하는 메서드를 나타내는 인터페이스를 제공합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Clients">
      <summary>허브에 연결할 클라이언트를 가져오거나 설정합니다.</summary>
      <returns>허브에 연결할 클라이언트입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Context">
      <summary>호출 클라이언트에 대한 정보를 가져오거나 설정합니다.</summary>
      <returns>호출 클라이언트에 대한 정보입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHub.Groups">
      <summary>이 허브 인스턴스의 그룹 관리자를 가져오거나 설정합니다.</summary>
      <returns>이 허브 인스턴스의 그룹 관리자입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnConnected">
      <summary>연결이 이 허브 인스턴스에 연결될 때 호출됩니다.</summary>
      <returns>연결 작업을 나타내는 작업 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnDisconnected">
      <summary>연결이 이 허브 인스턴스와 끊어질 때 호출됩니다.</summary>
      <returns>연결 끊기 작업을 나타내는 작업 개체입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHub.OnReconnected">
      <summary>연결이 이 허브 인스턴스에 다시 연결될 때 호출됩니다.</summary>
      <returns>다시 연결 작업을 나타내는 작업 개체입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubActivator">
      <summary>허브 인스턴스를 만들기 위한 메서드를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubActivator.Create(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>새 허브 인스턴스를 만듭니다.</summary>
      <returns>새로 만든 허브입니다.</returns>
      <param name="descriptor">허브 설명자입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />의 각 SignalR 연결에 대한 모든 정보를 캡슐화합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.Caller"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.Others"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.OthersInGroup(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext.OthersInGroups(System.Collections.Generic.IList{System.String})"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />의 SignalR 연결에 대한 모든 정보를 캡슐화합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.All">
      <summary>연결된 모든 클라이언트를 가져오거나 설정합니다.</summary>
      <returns>연결된 모든 클라이언트입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.AllExcept(System.String[])">
      <summary>지정된 호출 클라이언트를 제외한 모든 클라이언트에 대한 동적 표현을 반환합니다.</summary>
      <returns>지정된 호출 클라이언트를 제외한 모든 클라이언트에 대한 동적 표현입니다.</returns>
      <param name="excludeConnectionIds">제외할 연결 ID 목록입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Client(System.String)">
      <summary>지정된 연결 ID가 사용된 연결의 동적 표현을 반환합니다.</summary>
      <returns>지정된 클라이언트의 동적 표현입니다.</returns>
      <param name="connectionId">연결 ID입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Clients(System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Group(System.String,System.String[])">
      <summary>지정된 그룹의 동적 표현을 반환합니다.</summary>
      <returns>지정된 그룹의 동적 표현입니다.</returns>
      <param name="groupName">그룹의 이름입니다.</param>
      <param name="excludeConnectionIds">제외할 연결 ID 목록입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.Groups(System.Collections.Generic.IList{System.String},System.String[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext.User(System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider">
      <summary>사용 가능한 허브에 대한 정보를 제공하는 허브 설명자 공급자에 대해 설명합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider.GetHubs">
      <summary>사용 가능한 모든 허브를 검색합니다.</summary>
      <returns>허브 설명자 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider.TryGetHub(System.String,Microsoft.AspNet.SignalR.Hubs.HubDescriptor@)">
      <summary>지정된 이름의 허브를 검색하려고 합니다.</summary>
      <returns>허브가 있으면 True입니다.</returns>
      <param name="hubName">허브의 이름입니다.</param>
      <param name="descriptor">검색된 설명자 개체입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext">
      <summary>클라이언트에서 시작된 서버 쪽 허브 메서드 호출에 대한 설명입니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.Args">
      <summary>호출된 메서드에 전달될 인수를 가져옵니다.</summary>
      <returns>호출된 메서드에 전달될 인수입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.Hub">
      <summary>호출된 메서드가 구성원으로 포함되는 허브 인스턴스를 가져옵니다.</summary>
      <returns>호출된 메서드가 구성원으로 포함되는 허브 인스턴스입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.MethodDescriptor">
      <summary>클라이언트에서 호출될 메서드에 대한 설명을 가져옵니다.</summary>
      <returns>클라이언트에서 호출될 메서드에 대한 설명입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext.StateTracker">
      <summary>호출 시 클라이언트에서의 허브 상태를 나타내는 키-값 저장소를 가져옵니다.</summary>
      <returns>호출 시 클라이언트에서의 허브 상태를 나타내는 키-값 저장소입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubManager">
      <summary>전체 허브 및 메서드 조회 프로세스의 핵심인 허브 관리자에 대해 설명합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHub(System.String)">
      <summary>단일 허브 설명자를 검색합니다.</summary>
      <returns>허브 설명자입니다(있는 경우).그렇지 않으면 Null입니다.</returns>
      <param name="hubName">허브의 이름입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubMethod(System.String,System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>지정된 허브에서 지정된 이름의 메서드를 검색합니다.</summary>
      <returns>메서드에 대한 설명자입니다(있는 경우).그렇지 않으면 Null입니다.</returns>
      <param name="hubName">허브의 이름입니다.</param>
      <param name="method">찾을 메서드의 이름입니다.</param>
      <param name="parameters">일치하는지 확인할 메서드 매개 변수입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubMethods(System.String,System.Func{Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Boolean})">
      <summary>지정된 허브에서 호출 가능한 모든 메서드를 가져옵니다.</summary>
      <returns>사용 가능한 메서드 목록입니다.</returns>
      <param name="hubName">허브의 이름입니다.</param>
      <param name="predicate">필터링 결과의 조건자입니다(옵션).</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.GetHubs(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.Boolean})">
      <summary>지정된 조건자와 일치하는 모든 사용 가능한 허브를 검색합니다.</summary>
      <returns>허브 설명자 목록입니다.</returns>
      <param name="predicate">조건자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.ResolveHub(System.String)">
      <summary>지정된 허브 이름을 구체적인 개체로 확인합니다.</summary>
      <returns>허브 구현 인스턴스입니다(있는 경우).그렇지 않으면 Null입니다.</returns>
      <param name="hubName">허브의 이름입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubManager.ResolveHubs">
      <summary>사용 가능한 모든 허브를 구체적인 개체로 확인합니다.</summary>
      <returns>허브 인스턴스 목록입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext">
      <summary>서버에서 시작된 클라이언트 쪽 허브 메서드 호출에 대한 설명입니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Connection">
      <summary>클라이언트 쪽 허브 메서드를 호출하는 서버 쪽 허브 메서드를 호출한 클라이언트에 해당하는 경우에는 <see cref="T:Microsoft.AspNet.SignalR.IConnection" />을 가져옵니다.</summary>
      <returns>클라이언트 쪽 허브 메서드를 호출하는 서버 쪽 허브 메서드를 호출한 클라이언트에 해당하는 경우에는 <see cref="T:Microsoft.AspNet.SignalR.IConnection" />입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.ExcludedSignals">
      <summary>
        <see cref="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal" />과 상관없이, 메서드 호출을 받지 않는 클라이언트에 속하는 신호(ConnectionId, 허브 유형 이름 또는 허브 유형 이름 + "." + 그룹 이름)를 가져옵니다.</summary>
      <returns>
        <see cref="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal" />와 상관 없이, 메서드 호출을 받지 않는 클라이언트에 속하는 신호(ConnectionId, 허브 유형 이름 또는 허브 유형 이름 + "." + 그룹 이름)입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Invocation">
      <summary>클라이언트에서 이루어지는 메서드 호출에 대한 설명을 가져옵니다.</summary>
      <returns>클라이언트에서 이루어지는 메서드 호출에 대한 설명입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal">
      <summary>메서드 호출을 받는 클라이언트에 속하는 신호(ConnectionId, 허브 유형 이름 또는 허브 유형 이름 + "." + 그룹 이름)를 가져옵니다.</summary>
      <returns>메서드 호출을 받는 클라이언트에 속하는 신호(ConnectionId, 허브 유형 이름 또는 허브 유형 이름 + "." + 그룹 이름)입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signals">
      <summary>
        <see cref="P:Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext.Signal" />와 상관 없이, + 그룹 이름)입니다.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline">
      <summary>연결하기, 다시 연결하기, 연결 끊기, 서버 쪽 허브 메서드 호출하기, 클라이언트 쪽 허브 메서드 호출하기, 허브 클라이언트 권한 부여하기 및 허브 그룹에 다시 가입하기 등의 다양한 허브 처리 단계를 가로채 사용자 지정할 수 있는 모듈 컬렉션입니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule" />을 허브 파이프라인에 추가합니다.파이프라인에 처음 추가된 모듈은 파이프라인에 나중에 추가되는 모듈을 래핑합니다.모든 모듈은 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" />의 메서드가 호출되기 전에 파이프라인에 추가되어야 합니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" /> 자체에 모듈이 새로 추가되어 체인화된 <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" /> 호출이 가능합니다.이 메서드는 자신이 호출된 파이프라인을 변화시키므로 그 결과를 저장할 필요가 없습니다.</returns>
      <param name="pipelineModule">연결하기, 다시 연결하기, 연결 끊기, 서버 쪽 허브 메서드 호출하기, 클라이언트 쪽 허브 메서드 호출하기, 허브 클라이언트 권한 부여하기 및 허브 그룹에 다시 가입하기 등의 다양한 허브 처리 단계를 가로채 사용자 지정할 수 있는 모듈입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker">
      <summary>이러한 인터페이스 구현을 통해 연결하기, 다시 연결하기, 연결 끊기, 서버 쪽 허브 메서드 호출하기, 클라이언트 쪽 허브 메서드 호출하기, 허브 클라이언트 권한 부여하기 및 허브 그룹에 다시 가입하기 등의 다양한 허브 처리 단계를 완료하는 데 필요한 작업을 실행할 수 있습니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.AuthorizeConnect(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
      <summary>클라이언트가 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />에 의해 설명된 허브에 속하는 신호를 구독하기 전에 호출됩니다.기본적으로 <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />은 설명된 허브에 대한 메서드 호출을 구독할 권한이 클라이언트에 부여되었는지 확인하기 위해 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />의 특성을 찾습니다.</summary>
      <returns>클라이언트 쪽 허브 메서드 호출을 구독할 권한이 클라이언트에 부여되면 true를 반환하며 그렇지 않으면 false를 반환합니다.</returns>
      <param name="hubDescriptor">클라이언트가 연결하려고 하는 허브에 대한 설명입니다.</param>
      <param name="request">클라이언트의 <see cref="T:System.Security.Principal.IPrincipal" /> 사용자를 포함할 클라이언트에 의해 만들어지는 연결 요청입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Connect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>클라이언트가 연결할 각 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />에 연결될 때 호출됩니다.기본적으로 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />의 OnConnected 메서드가 호출됩니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />을 반환합니다.</returns>
      <param name="hub">클라이언트가 연결되는 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Disconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>클라이언트가 연결되어 있는 각 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />와 연결이 끊어질 때 호출됩니다.기본적으로 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />의 OnDisconnected 메서드가 호출됩니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />을 반환합니다.</returns>
      <param name="hub">클라이언트와의 연결이 끊어진 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Invoke(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
      <summary>서버 쪽 허브 메서드를 호출합니다.</summary>
      <returns>서버 쪽 허브 메서드 호출에 대한 반환 값을 제공하는 비동기 작업입니다.</returns>
      <param name="context">서버 쪽 허브 메서드 호출에 대한 설명입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Reconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
      <summary>클라이언트가 연결할 각 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />에 다시 연결될 때 호출됩니다.기본적으로 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />의 OnReconnected 메서드가 호출됩니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />을 반환합니다.</returns>
      <param name="hub">클라이언트가 다시 연결되는 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.RejoiningGroups(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String})">
      <summary>이 메서드는 클라이언트가 다시 가입되도록 허용되어야 하는 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />에 의해 설명된 허브에 속하는 그룹을 결정합니다.기본적으로 서버에 다시 연결되는 클라이언트는 이전에 구성원으로 속해 있던 모든 그룹에서 제거됩니다. 신뢰할 수 없는 클라이언트가 가입이 허용된 적이 없는 그룹의 구성원인 것으로 주장할 수 있기 때문입니다.</summary>
      <returns>클라이언트가 다시 가입될 수 있도록 허용되는 그룹 목록입니다.</returns>
      <param name="hubDescriptor">클라이언트가 그룹에 다시 가입하려고 하는 허브에 대한 설명입니다.</param>
      <param name="request">그룹에 다시 가입하려고 하는 클라이언트에 의해 만들어지는 다시 연결 요청입니다.</param>
      <param name="groups">클라이언트가 다시 연결 이전에 구성원이었던 것으로 주장하는 관련 허브에 속하는 그룹 목록입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker.Send(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
      <summary>클라이언트 쪽 허브 메서드를 호출합니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />을 반환합니다.</returns>
      <param name="context">클라이언트 쪽 허브 메서드 호출에 대한 설명입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule" />은 연결하기, 다시 연결하기, 연결 끊기, 서버 쪽 허브 메서드 호출하기, 클라이언트 쪽 허브 메서드 호출하기, 허브 클라이언트 권한 부여하기 및 허브 그룹에 다시 가입하기 등의 다양한 허브 처리 단계를 가로채 사용자 지정할 수 있습니다.모듈은 <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipeline.AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)" />을 호출함으로써 활성화됩니다.<see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipeline" />에 추가된 통합 모듈은 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker" /> 인터페이스를 통해 호출됩니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
      <summary>클라이언트가 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />에 의해 설명된 허브에 속하는 신호를 구독하기 전에 호출될 함수를 래핑합니다.기본적으로 <see cref="T:Microsoft.AspNet.SignalR.Hubs.AuthorizeModule" />은 설명된 허브에 대한 메서드 호출을 구독할 권한이 클라이언트에 부여되었는지 확인하기 위해 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />의 특성을 찾습니다.이 함수는 클라이언트 쪽 허브 메서드 호출을 구독할 권한이 클라이언트에 부여되어 있으면 true를 반환하며 그렇지 않으면 false를 반환합니다.</summary>
      <returns>설명된 허브에 연결할 권한이 클라이언트에 부여되었는지 여부를 지정하는 래핑된 함수입니다.</returns>
      <param name="authorizeConnect">설명된 허브에 연결할 권한이 클라이언트에 부여되었는지 여부를 지정하는 함수입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>클라이언트가 연결될 각 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />에 연결될 때 호출되는 함수를 래핑합니다.기본적으로 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />의 OnConnected 메서드가 호출됩니다.</summary>
      <returns>클라이언트가 허브에 연결될 때 호출되는 래핑된 함수입니다.</returns>
      <param name="connect">클라이언트가 허브에 연결될 때 호출되는 함수입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildDisconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>클라이언트가 연결된 각 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />와 연결이 끊어질 때 호출되는 함수를 래핑합니다.기본적으로 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />의 OnDisconnected 메서드가 호출됩니다.</summary>
      <returns>클라이언트가 허브와의 연결이 끊어질 때 호출되는 래핑된 함수입니다.</returns>
      <param name="disconnect">클라이언트가 허브와의 연결이 끊어질 때 호출되는 함수입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
      <summary>서버 쪽 허브 메서드가 호출되는 함수를 래핑합니다.허브와 연결할 권한이 클라이언트에 부여되지 않은 경우라도, 호출 매개 변수를 실행하지 않음으로써 <see cref="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})" />에서 금지하지 않는 한 클라이언트는 해당 허브에서 서버 쪽 메서드를 호출할 권한을 부여받을 수 있습니다.</summary>
      <returns>서버 쪽 허브 메서드를 호출하는 래핑된 함수입니다.</returns>
      <param name="invoke">서버 쪽 허브 메서드를 호출하는 함수입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildOutgoing(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext,System.Threading.Tasks.Task})">
      <summary>클라이언트 쪽 허브 메서드가 호출되는 함수를 래핑합니다.</summary>
      <returns>클라이언트 쪽 허브 메서드를 호출하는 래핑된 함수입니다.</returns>
      <param name="send">클라이언트 쪽 허브 메서드를 호출하는 함수입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildReconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
      <summary>클라이언트가 연결될 각 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />에 다시 연결될 때 호출되는 함수를 래핑합니다.기본적으로 <see cref="T:Microsoft.AspNet.SignalR.Hubs.IHub" />의 OnReconnected 메서드가 호출됩니다.</summary>
      <returns>클라이언트가 허브에 다시 연결될 때 호출되는 래핑된 함수입니다.</returns>
      <param name="reconnect">클라이언트가 허브에 다시 연결될 때 호출되는 함수입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule.BuildRejoiningGroups(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}})">
      <summary>클라이언트가 다시 가입되도록 허용되어야 하는 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDescriptor" />에 의해 설명된 허브에 속하는 그룹을 결정하는 함수를 래핑합니다.기본적으로 서버에 다시 연결되는 클라이언트는 이전에 구성원으로 속해 있던 모든 그룹에서 제거됩니다. 신뢰할 수 없는 클라이언트가 가입이 허용된 적이 없는 그룹의 구성원인 것으로 주장할 수 있기 때문입니다.</summary>
      <returns>클라이언트가 다시 가입되도록 허용되어야 하는 그룹을 결정하는 래핑된 함수입니다.</returns>
      <param name="rejoiningGroups">클라이언트가 다시 가입되도록 허용되어야 하는 그룹을 결정하는 함수입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IHubRequestParser">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubDispatcher" />를 통해 들어오는 요청에 대한 구문 분석을 처리합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IHubRequestParser.Parse(System.String,Newtonsoft.Json.JsonSerializer)">
      <summary>들어오는 허브 페이로드를 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" />로 구문 분석합니다.</summary>
      <returns>결과에 해당되는 <see cref="T:Microsoft.AspNet.SignalR.Hubs.HubRequest" />입니다.</returns>
      <param name="data">원시 허브 페이로드입니다.</param>
      <param name="serializer">데이터 구문 분석에 사용되는 JsonSerializer입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier">
      <summary>허브의 JavaScript를 결합, 축소 및 캐시합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier.Minify(System.String)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier" />의 지정된 소스를 축소합니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier" />의 지정된 소스입니다.</returns>
      <param name="source">축소된 소스입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator">
      <summary>JavaScript 인터페이스에 대한 프록시 서비스를 생성합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator.GenerateProxy(System.String)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator" />의 서비스 URL에 대한 프록시를 생성합니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator" />의 서비스 URL을 생성하는 프록시입니다.</returns>
      <param name="serviceUrl">서비스 URL입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider">
      <summary>지정된 허브에서 사용 가능한 메서드 컬렉션을 만드는 허브 메서드 공급자에 대해 설명합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider.GetMethods(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>지정된 허브에서의 모든 메서드를 검색합니다.</summary>
      <returns>사용 가능한 메서드입니다.</returns>
      <param name="hub">허브 설명자 개체입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider.TryGetMethod(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.String,Microsoft.AspNet.SignalR.Hubs.MethodDescriptor@,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>메서드를 검색하려고 합니다.</summary>
      <returns>메서드가 있으면 True입니다.</returns>
      <param name="hub">허브 설명자 개체입니다.</param>
      <param name="method">메서드의 이름입니다.</param>
      <param name="descriptor">메서드에 대한 설명자입니다(있는 경우).그렇지 않으면 Null입니다.</param>
      <param name="parameters">일치시킬 메서드 매개 변수입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.IParameterResolver">
      <summary>제공된 정보를 근거로 매개 변수 일치 값을 확인하는 매개 변수 확인자에 대해 설명합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.IParameterResolver.ResolveMethodParameters(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>제공된 개체를 바탕으로 메서드 매개 변수 값을 확인합니다.</summary>
      <returns>매개 변수 값의 배열입니다.</returns>
      <param name="method">메서드 설명자입니다.</param>
      <param name="values">매개 변수 값을 확인할 값 목록입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor">
      <summary>단일 허브 메서드에 대한 정보를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Attributes">
      <summary>이 메서드에 연결된 특성을 가져오거나 설정합니다.</summary>
      <returns>이 메서드에 연결된 특성입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Hub">
      <summary>이 메서드를 대상으로 하는 허브 설명자 개체를 가져옵니다.</summary>
      <returns>이 메서드를 대상으로 하는 허브 설명자 개체입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Invoker">
      <summary>메서드 호출 대리자를 가져오거나 설정합니다.대상 허브 및 호출 인수 배열을 해당 인수로 받습니다.</summary>
      <returns>메서드 호출 대리자입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.Parameters">
      <summary>사용 가능한 메서드 매개 변수를 가져오거나 설정합니다.</summary>
      <returns>사용 가능한 메서드 매개 변수입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor.ReturnType">
      <summary>이 메서드의 반환 형식을 가져오거나 설정합니다.</summary>
      <returns>이 메서드의 반환 형식입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MethodExtensions">
      <summary>SignalR 버스의 메서드 확장을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MethodExtensions.Matches(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>메서드 확장이 다른 메서드 설명자와 일치하는지 여부를 지정합니다.</summary>
      <returns>메서드 확장이 다른 메서드 설명자와 일치하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="methodDescriptor">메서드 설명자입니다.</param>
      <param name="parameters">매개 변수 목록입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.Collections.Generic.IList{System.String},System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.GetInvocationData(System.String,System.Object[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.Invoke(System.String,System.Object[])"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException">
      <summary>클라이언트가 허브에 연결할 수 있는 권한을 부여받지 못한 경우 발생하는 예외를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>직렬화된 데이터를 사용하여 <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info">예외에 대한 직렬화된 정보입니다.</param>
      <param name="context">원본 또는 대상에 대한 문맥 정보입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.String)">
      <summary>오류 메시지를 사용하여 <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 메시지입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException.#ctor(System.String,System.Exception)">
      <summary>오류 메시지 및 내부 예외를 사용하여 <see cref="T:Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 메시지입니다.</param>
      <param name="inner">예외를 발생시키는 오류입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier">
      <summary>null 상태의 Javascript Minifier를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.Instance">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier" /> 인스턴스를 지정합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier.Minify(System.String)">
      <summary>Javascript의 지정된 원본을 축소합니다.</summary>
      <returns>축소된 소스입니다.</returns>
      <param name="source">축소할 원본입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor">
      <summary>Provides details about the null method.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor" /> class.</summary>
      <param name="methodName">The name for this null method.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Attributes">
      <summary>Gets or sets the attributes attached to this method.</summary>
      <returns>The attributes attached to this method.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Invoker">
      <summary>Gets or sets the method invocation delegate. Takes a target hub and an array of invocation arguments as it's arguments.</summary>
      <returns>The method invocation delegate.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor.Parameters">
      <summary>Gets or sets the available method parameters.</summary>
      <returns>The available method parameters.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor">
      <summary>단일 허브 메서드 매개 변수에 대한 정보를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.Name">
      <summary>매개 변수 이름을 가져오거나 설정합니다.</summary>
      <returns>매개 변수 이름입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor.ParameterType">
      <summary>매개 변수 유형을 가져오거나 설정합니다.</summary>
      <returns>매개 변수 유형입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider">
      <summary>사용 가능한 허브에 대한 반영된 정보를 제공하는 허브 설명자 공급자에 대해 설명합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="resolver">
        <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.BuildHubsCache">
      <summary>허브 캐시를 작성하는 연결 컬렉션을 검색합니다.</summary>
      <returns>허브 캐시를 작성하는 연결 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.GetHubs">
      <summary>사용 가능한 모든 허브를 검색합니다. </summary>
      <returns>사용 가능한 허브의 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider.TryGetHub(System.String,Microsoft.AspNet.SignalR.Hubs.HubDescriptor@)">
      <summary>지정된 이름의 허브를 검색하려고 합니다.</summary>
      <returns>허브가 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="hubName">검색할 허브의 이름입니다.</param>
      <param name="descriptor">이 메서드가 반환되면 검색된 설명자 개체가 포함됩니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider">
      <summary>설명자 공급자에 대한 반영된 메서드를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.GetMethods(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
      <summary>공급자에 대한 메서드 컬렉션을 반환합니다.</summary>
      <returns>공급자에 대한 메서드 컬렉션입니다.</returns>
      <param name="hub">허브 설명자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider.TryGetMethod(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.String,Microsoft.AspNet.SignalR.Hubs.MethodDescriptor@,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
      <summary>지정된 <paramref name="hub" />에서 지정된 <paramref name="method" />를 검색합니다.</summary>
      <returns>이름/매개 변수 세트와 일치하는 메서드가 허브에 있으면 true, 그렇지 않으면 false입니다.</returns>
      <param name="hub">지정된 <paramref name="method" />가 검색될 허브입니다.</param>
      <param name="method">검색할 메서드 이름입니다.</param>
      <param name="descriptor">성공한 경우, 확인된 <see cref="T:Microsoft.AspNet.SignalR.Hubs.MethodDescriptor" />입니다.</param>
      <param name="parameters">지정된 <paramref name="method" />의 특정 오버로드를 찾는 데 사용할 수 있는 매개 변수 집합입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper">
      <summary>리플렉션 도우미를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper.GetAttributeValue``2(System.Reflection.ICustomAttributeProvider,System.Func{``0,``1})">
      <summary>이 도우미에 대한 특성 값을 가져옵니다.</summary>
      <returns>이 도우미에 대한 특성 값입니다.</returns>
      <param name="source">값을 가져올 원본입니다.</param>
      <param name="valueGetter">값 getter입니다.</param>
      <typeparam name="TAttribute">특성의 형식입니다.</typeparam>
      <typeparam name="TResult">결과의 형식입니다.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.ReflectionHelper.GetExportedHubMethods(System.Type)">
      <summary>내보낸 허브 메서드 목록을 가져옵니다.</summary>
      <returns>내보낸 허브 메서드 목록입니다.</returns>
      <param name="type">가져올 메서드의 유형입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy">
      <summary>허브에서 사용되는 신호 프록시를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String,System.Collections.Generic.IList{System.String})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Connection"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.GetInvocationData(System.String,System.Object[])">
      <summary>프록시와 연관된 클라이언트 허브 호출 데이터를 가져옵니다.</summary>
      <returns>프록시와 연관된 클라이언트 허브 호출 데이터입니다.</returns>
      <param name="method">메서드입니다.</param>
      <param name="args">Argumenty.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.HubName">
      <summary>허브 이름을 가져오거나 설정합니다.</summary>
      <returns>허브의 이름입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Invoke(System.String,System.Object[])">
      <summary>메서드를 호출하고 메서드 호출 결과를 반환합니다.</summary>
      <returns>작업의 결과입니다.</returns>
      <param name="method">호출할 메서드입니다.</param>
      <param name="args">인수 배열입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Invoker"></member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.SignalProxy.Signal">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy" />와 연관된 신호를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.SignalProxy" />와 연관된 신호입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>멤버 값을 가져오는 작업에 대한 구현을 제공합니다.</summary>
      <returns>작업에 성공하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="binder">동적 작업을 호출한 개체에 대한 정보입니다.</param>
      <param name="result">get 작업의 결과입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.SignalProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
      <summary>멤버를 호출하는 작업에 대한 구현을 제공합니다.</summary>
      <returns>작업에 성공하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="binder">동적 작업에 대한 정보를 제공합니다.</param>
      <param name="args">호출 작업 시 개체 구성원에 전달되는 인수입니다.</param>
      <param name="result">멤버 호출의 결과입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker">
      <summary>변경 추적 사전을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="values">사전 값입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.GetChanges">
      <summary>추적기와 연관된 변경 내용을 가져옵니다.</summary>
      <returns>추적기와 연관된 변경 내용입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Hubs.StateChangeTracker.Item(System.String)">
      <summary>지정된 키를 사용하는 추적기와 연관된 항목을 가져오거나 설정합니다.</summary>
      <returns>지정된 키를 사용하는 추적기와 연관된 항목입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy">
      <summary>허브에서 사용되는 상태 저장 신호 프록시를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String,Microsoft.AspNet.SignalR.Hubs.StateChangeTracker)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.GetInvocationData(System.String,System.Object[])">
      <summary>프록시와 연관된 클라이언트 허브 호출 데이터를 가져옵니다.</summary>
      <returns>프록시와 연관된 클라이언트 허브 호출 데이터입니다.</returns>
      <param name="method">메서드입니다.</param>
      <param name="args">Argumenty.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>멤버 값을 가져오는 작업에 대한 구현을 제공합니다.</summary>
      <returns>작업에 성공하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="binder">동적 작업을 호출한 개체에 대한 정보입니다.</param>
      <param name="result">get 작업의 결과입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>멤버 값을 설정하는 작업에 대한 구현을 제공합니다.</summary>
      <returns>작업에 성공하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="binder">동적 작업을 호출한 개체에 대한 정보입니다.</param>
      <param name="value">set 작업의 결과입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Hubs.UserProxy"></member>
    <member name="M:Microsoft.AspNet.SignalR.Hubs.UserProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler">
      <summary>ACK(앱 인증 키트)를 처리하는 인스턴스를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.#ctor(System.Boolean,System.TimeSpan,System.TimeSpan)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="completeAcksOnTimeout">시간 초과 시 ACK가 완료된 경우 true이고, 그렇지 않으면 false입니다.</param>
      <param name="ackThreshold">ACK 임계값입니다.</param>
      <param name="ackInterval">ACK 간격입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.CreateAck(System.String)">
      <summary>새 ACK 개체를 만듭니다.</summary>
      <returns>만든 ACK 개체입니다.</returns>
      <param name="id">식별자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.Dispose">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.AckHandler" />에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.Dispose(System.Boolean)">
      <summary>이 인스턴스에서 사용하는 모든 리소스를 해제합니다.</summary>
      <param name="disposing">관리된 리소스와 관리되지 않은 리소스를 해제하려면 true이고, 관리되지 않은 리소스만 해제하려면 false입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.AckHandler.TriggerAck(System.String)">
      <summary>지정된 ACK 개체를 트리거합니다.</summary>
      <returns>작업의 결과입니다.</returns>
      <param name="id">ACK 식별자입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader">
      <summary>배열 세그먼트와 연관된 텍스트 판독기를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader.#ctor(System.ArraySegment{System.Byte},System.Text.Encoding)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="buffer">배열 세그먼트 버퍼입니다.</param>
      <param name="encoding">인코딩입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>현재 판독기를 통해 지정된 최대 문자 수를 읽고 지정된 인덱스에서 시작하는 버퍼에 해당 데이터를 기록합니다.</summary>
      <returns>읽은 문자 수입니다.</returns>
      <param name="buffer">인덱스 간의 값이 있으며 현재 원본에서 읽은 문자로 대체된 지정된 문자 배열을 포함합니다.</param>
      <param name="index">기록을 시작할 버퍼의 위치입니다.</param>
      <param name="count">읽을 최대 문자 수입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Connection">
      <summary>여기에 있는 콘텐츠는 업데이트되지 않습니다. 여기에 자료를 추가하지 마십시오.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.#ctor(Microsoft.AspNet.SignalR.Messaging.IMessageBus,Newtonsoft.Json.JsonSerializer,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Infrastructure.IAckHandler,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Infrastructure.IProtectedData)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.Connection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="newMessageBus">새 메시지 버스입니다.</param>
      <param name="jsonSerializer">JSON 직렬 변환기입니다.</param>
      <param name="baseSignal">기본 신호입니다.</param>
      <param name="connectionId">연결 ID입니다.</param>
      <param name="signals">신호 컬렉션입니다.</param>
      <param name="groups">그룹 컬렉션입니다.</param>
      <param name="traceManager">추적 관리자입니다.</param>
      <param name="ackHandler">ACK 처리기입니다.</param>
      <param name="performanceCounterManager">성능 카운터 관리자입니다.</param>
      <param name="protectedData">보호된 데이터입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.DefaultSignal">
      <summary>이 연결의 주 신호를 가져옵니다.</summary>
      <returns>이 연결의 주 신호입니다.</returns>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Infrastructure.Connection.EventKeyAdded">
      <summary>이벤트에서 키가 추가되었을 때 발생합니다.</summary>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Infrastructure.Connection.EventKeyRemoved">
      <summary>이벤트에서 키가 제거되었을 때 발생합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Identity">
      <summary>이 컬렉션에 대한 ID 속성을 가져옵니다.</summary>
      <returns>이 컬렉션에 대한 ID 속성입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Microsoft#AspNet#SignalR#Messaging#ISubscriber#EventKeys">
      <summary>인덱스를 기준으로 개별적으로 액세스할 수 있는 개체 목록을 가져옵니다.</summary>
      <returns>인덱스를 기준으로 개별적으로 액세스할 수 있는 개체 목록입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.Receive(System.String,System.Func{Microsoft.AspNet.SignalR.Transports.PersistentResponse,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>연결 메서드에 대한 메시지 응답을 받습니다.</summary>
      <returns>받을 연결 메서드에 대한 메시지 응답입니다.</returns>
      <param name="messageId">메시지 ID입니다.</param>
      <param name="callback">연결에서 콜백 응답을 만드는지 확인합니다.</param>
      <param name="maxMessages">최대 메시지 수입니다.</param>
      <param name="state">연결 상태입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Connection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)">
      <summary>하나 이상의 연결로 메시지를 보냅니다.</summary>
      <returns>하나 이상의 연결로 전송된 메시지입니다.</returns>
      <param name="message">연결로 보낸 메시지입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.Subscription">
      <summary>이 연결 속성에 대한 구독을 가져오거나 설정합니다.</summary>
      <returns>이 연결 속성에 대한 구독입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Connection.WriteCursor">
      <summary>순차적인 일련의 문자를 쓰는 커서를 가져오거나 설정합니다.</summary>
      <returns>순차적인 일련의 문자를 쓰는 커서입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager">
      <summary>기본 <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager" /> 구현을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="resolver">
        <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetConnection(System.Type)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" />를 반환합니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" />입니다.</returns>
      <param name="type">
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />의 유형입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetConnectionContext``1">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" />를 반환합니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" />입니다.</returns>
      <typeparam name="T">
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />의 유형입니다.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetHubContext``1">
      <summary>이 연결에 대한 허브 컨텍스트를 반환합니다.</summary>
      <returns>이 연결에 대한 허브 컨텍스트입니다.</returns>
      <typeparam name="T">허브 유형입니다.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager.GetHubContext(System.String)">
      <summary>지정된 이름이 제공된 이 연결에 대한 허브 컨텍스트를 반환합니다.</summary>
      <returns>이 연결에 대한 허브 컨텍스트입니다.</returns>
      <param name="hubName">허브의 이름입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData">
      <summary>데이터를 보호하는 메서드를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.#ctor(Microsoft.Owin.Security.DataProtection.IDataProtectionProvider)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="provider">데이터 보호 공급자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.Protect(System.String,System.String)">
      <summary>지정된 데이터를 보호합니다.</summary>
      <returns>보호된 데이터입니다.</returns>
      <param name="data">보호할 데이터입니다.</param>
      <param name="purpose">보호 목적입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData.Unprotect(System.String,System.String)">
      <summary>지정된 데이터에서 보호를 제거합니다.</summary>
      <returns>보호되지 않는 데이터입니다.</returns>
      <param name="protectedValue">보호된 데이터입니다.</param>
      <param name="purpose">보호 목적입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData">
      <summary>데이터를 보호하는 메서드를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.Protect(System.String,System.String)">
      <summary>지정된 데이터를 보호합니다.</summary>
      <returns>보호된 데이터입니다.</returns>
      <param name="data">보호할 데이터입니다.</param>
      <param name="purpose">보호 목적입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData.Unprotect(System.String,System.String)">
      <summary>지정된 데이터에서 보호를 제거합니다.</summary>
      <returns>보호되지 않는 데이터입니다.</returns>
      <param name="protectedValue">보호된 데이터입니다.</param>
      <param name="purpose">보호 목적입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler">
      <summary>ACK(앱 인증 키트)를 처리하는 인스턴스를 나타내는 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler.CreateAck(System.String)">
      <summary>새 ACK 개체를 만듭니다.</summary>
      <returns>만든 ACK 개체입니다.</returns>
      <param name="id">식별자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IAckHandler.TriggerAck(System.String)">
      <summary>지정된 ACK 개체를 트리거합니다.</summary>
      <returns>작업의 결과입니다.</returns>
      <param name="id">ACK 식별자입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IBinaryWriter">
      <summary>Represents the base interface for class that has the ability to write raw binary data.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IBinaryWriter.Write(System.ArraySegment{System.Byte})">
      <summary>Writes raw binary data to underlying stream.</summary>
      <param name="data">The raw binary data to write.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager">
      <summary>허브 및 영구 연결/참조에 대한 액세스를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetConnectionContext``1">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" />를 반환합니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.IPersistentConnectionContext" />입니다.</returns>
      <typeparam name="T">
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />의 유형입니다.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetHubContext``1">
      <summary>연결과 연관된 허브 정보를 반환합니다.</summary>
      <returns>연결과 연관된 허브 정보입니다.</returns>
      <typeparam name="T">허브 유형입니다.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager.GetHubContext(System.String)">
      <summary>연결과 연관된 허브 정보를 반환합니다.</summary>
      <returns>연결과 연관된 허브 정보입니다.</returns>
      <param name="hubName">허브의 이름입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.InterlockedHelper">
      <summary>여러 스레드에서 공유되는 변수에 대한 원자성 작업의 도우미를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.InterlockedHelper.CompareExchangeOr(System.Int32@,System.Int32,System.Int32,System.Int32)">
      <summary>참조 같음에 대해 두 개체를 비교하고 두 개체가 같은지 비교합니다.</summary>
      <returns>두 개체가 같으면 true, 그렇지 않으면 false입니다.</returns>
      <param name="location">피비교수와 비교되는 대상 개체이며 대체될 수 있습니다. </param>
      <param name="value">비교 결과 같은 것으로 나타나면 대상 개체를 대체하는 개체입니다.</param>
      <param name="comparandA">첫 번째 피비교수입니다.</param>
      <param name="comparandB">두 번째 피비교수입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter">
      <summary>여기에 있는 콘텐츠는 업데이트되지 않습니다. 여기에 자료를 추가하지 마십시오.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Close">
      <summary>성능 카운터를 닫고 이 성능 카운터 인스턴스로 할당된 모든 리소스를 확보합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.CounterName"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Decrement">
      <summary>효율적인 소규모 작업을 통해 연관된 성능 카운터를 하나씩 감소시킵니다.</summary>
      <returns>감소된 카운터 값입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.Increment">
      <summary>효율적인 소규모 작업을 통해 연관된 성능 카운터를 하나씩 증가시킵니다.</summary>
      <returns>증가된 카운터 값입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.IncrementBy(System.Int64)">
      <summary>효율적인 소규모 작업을 통해 연관된 성능 카운터 값을 지정한 양만큼 증가시키거나 감소시킵니다.</summary>
      <returns>새 카운터 값입니다.</returns>
      <param name="value">증가시킬 값입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.NextSample">
      <summary>카운터 샘플을 가져오고 이 카운터에 대한 원시 값 또는 계산되지 않은 값을 반환합니다.</summary>
      <returns>카운터 샘플로서, 이 카운터에 대한 원시 값 또는 계산되지 않은 값을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.RawValue">
      <summary>이 카운터의 원시 값 또는 계산되지 않은 값을 가져오거나 설정합니다.</summary>
      <returns>카운터의 원시 값입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter.RemoveInstance">
      <summary>PerformanceCounter 개체 InstanceName 속성으로 지정된 범주 인스턴스를 삭제합니다.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager">
      <summary>성능 카운터에 대한 액세스를 제공합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesReceivedPerSec">
      <summary>연결(서버에서 클라이언트로)에 의해 수신된 초당 메시지 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesReceivedTotal">
      <summary>응용 프로그램이 시작된 이후 연결(서버에서 클라이언트로)에 의해 수신된 총 메시지 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesSentPerSec">
      <summary>연결(클라이언트에서 서버로)에 의해 전송된 초당 메시지 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionMessagesSentTotal">
      <summary>응용 프로그램이 시작된 이후 연결(클라이언트에서 서버로)에 의해 전송된 총 메시지 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsConnected">
      <summary>응용 프로그램이 시작된 이후 연결의 총 연결 이벤트 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsCurrent">
      <summary>현재 연결된 연결 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsDisconnected">
      <summary>응용 프로그램이 시작된 이후 연결의 총 연결 끊기 이벤트 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ConnectionsReconnected">
      <summary>응용 프로그램이 시작된 이후 연결의 총 다시 연결 이벤트 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsAllPerSec">
      <summary>처리된 모든 초당 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsAllTotal">
      <summary>응용 프로그램이 시작된 이후 처리된 총 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubInvocationPerSec">
      <summary>초당 허브 호출 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubInvocationTotal">
      <summary>응용 프로그램이 시작된 이후 처리된 총 허브 호출 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubResolutionPerSec">
      <summary>초당 허브 확인 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsHubResolutionTotal">
      <summary>응용 프로그램이 시작된 이후 처리된 총 허브 확인 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsTransportPerSec">
      <summary>초당 전송 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ErrorsTransportTotal">
      <summary>응용 프로그램이 시작된 이후 처리된 총 전송 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.Initialize(System.String,System.Threading.CancellationToken)">
      <summary>성능 카운터를 초기화합니다.</summary>
      <param name="instanceName">호스트 인스턴스 이름입니다.</param>
      <param name="hostShutdownToken">호스트 종료를 나타내는 CancellationToken입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.LoadCounter(System.String,System.String,System.String,System.Boolean)">
      <summary>성능 카운터를 로드합니다.</summary>
      <param name="categoryName">범주 이름입니다.</param>
      <param name="counterName">카운터 이름입니다.</param>
      <param name="instanceName">인스턴스 이름입니다.</param>
      <param name="isReadOnly">카운터가 읽기 전용인지 여부입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusAllocatedWorkers">
      <summary>메시지 버스에서 메시지 배달에 할당된 작업자 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusBusyWorkers">
      <summary>메시지 버스에서 메시지를 배달하는 중인 작업자 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesPublishedPerSec">
      <summary>메시지 버스에 게시된 초당 메시지 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesPublishedTotal">
      <summary>응용 프로그램이 시작된 이후 메시지 버스로 게시된 총 메시지 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesReceivedPerSec">
      <summary>구독자가 수신한 초당 메시지 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusMessagesReceivedTotal">
      <summary>응용 프로그램이 시작된 이후 구독자가 수신한 총 메시지 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersCurrent">
      <summary>메시지 버스에 대한 현재 구독자 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersPerSec">
      <summary>메시지 버스에 대한 초당 새 구독자 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusSubscribersTotal">
      <summary>응용 프로그램이 시작된 이후 메시지 버스에 대한 총 구독자 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.MessageBusTopicsCurrent">
      <summary>메시지 버스에 대한 현재 항목 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutErrorsPerSec">
      <summary>초당 확장 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutErrorsTotal">
      <summary>응용 프로그램이 시작된 이후의 총 확장 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutMessageBusMessagesReceivedPerSec">
      <summary>확장 메시지 버스에서 수신하는 초당 메시지 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutSendQueueLength">
      <summary>현재 확장 송신 큐 길이를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountBuffering">
      <summary>현재 구성된 확장 메시지 버스 공급자에 있는 버퍼링 상태의 논리적 스트림 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountOpen">
      <summary>현재 구성된 확장 메시지 버스 공급자에 있는 열린 상태의 논리적 스트림 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager.ScaleoutStreamCountTotal">
      <summary>현재 구성된 확장 메시지 버스 공급자에 있는 논리적 스트림 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData">
      <summary>SignalR 인프라와 연관된 데이터의 암호화 및 암호 해독 메서드를 제공하는 인터페이스를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData.Protect(System.String,System.String)">
      <summary>지정된 데이터를 보호합니다.</summary>
      <returns>보호된 데이터입니다.</returns>
      <param name="data">보호할 데이터입니다.</param>
      <param name="purpose">보호 목적입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IProtectedData.Unprotect(System.String,System.String)">
      <summary>특정 데이터의 보호를 강화합니다.</summary>
      <returns>보호되지 않는 데이터입니다.</returns>
      <param name="protectedValue">보호되지 않을 보호된 값입니다.</param>
      <param name="purpose">보호를 강화하는 이유입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager">
      <summary>서버 ID를 생성합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager.ServerId">
      <summary>서버 ID입니다.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier">
      <summary>문자열 크기를 줄이는 클래스를 나타내는 인터페이스를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)">
      <summary>이 <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" /> 인스턴스에 의해 반대 결과가 생성되는 방식으로 문자열을 축소합니다.</summary>
      <returns>,|\ 문자가 제외되어 축소된 <paramref name="value" /> 표현입니다.</returns>
      <param name="value">축소될 문자열입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)">
      <summary>이 함수에 대한 호출은 이전에 축소된 <paramref name="value" /> 문자열을 축소 해제하도록 시도할 경우 null 값이 반환될 수 있음을 나타냅니다.이를 통해, <paramref name="value" />를 참조하는 모든 내부 데이터 구조를 정리할 수 있습니다.</summary>
      <param name="value">이전에 축소되었던 문자열입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Unminify(System.String)">
      <summary>이 <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" /> 인스턴스에서 이전에 한 번 이상 실행되었던 <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> 호출에 대해, <paramref name="value" />가 반환된 <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> 호출과 같은 인수를 공유하는 <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)" />의 후속 호출 없이도 반대 결과가 생성됩니다.</summary>
      <returns>
        <paramref name="value" />가 반환된 이전 <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> 호출의 인수입니다.이 <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier" /> 인스턴스에서의 모든 <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> 호출에서 <paramref name="value" />가 반환되지 않은 경우 또는 <paramref name="value" />가 반환된 가장 최근 <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" /> 호출 이후에 동일한 인수를 공유하는 <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.RemoveUnminified(System.String)" /> 호출이 이루어진 경우에는 <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Unminify(System.String)" />에서 null이 반환될 수 있지만 예외가 발생되지는 않을 것입니다.</returns>
      <param name="value">
        <see cref="M:Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier.Minify(System.String)" />에 대한 이전 호출에서 반환된 최소화된 문자열입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager">
      <summary>Windows 성능 카운터를 사용하여 성능 카운터를 관리합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor(Microsoft.AspNet.SignalR.DefaultDependencyResolver)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="resolver">기본 종속성 확인자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.#ctor(Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.CategoryName">
      <summary>이 성능 카운터에 대한 성능 카운터 범주 이름을 지정합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesReceivedPerSec">
      <summary>연결(서버에서 클라이언트로)에 의해 수신된 초당 메시지 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesReceivedTotal">
      <summary>응용 프로그램이 시작된 이후 연결(서버에서 클라이언트로)에 의해 수신된 총 메시지 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesSentPerSec">
      <summary>연결(클라이언트에서 서버로)에 의해 전송된 초당 메시지 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionMessagesSentTotal">
      <summary>응용 프로그램이 시작된 이후 연결(클라이언트에서 서버로)에 의해 전송된 총 메시지 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsConnected">
      <summary>응용 프로그램이 시작된 이후 연결의 총 연결 이벤트 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsCurrent">
      <summary>현재 연결된 연결 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsDisconnected">
      <summary>응용 프로그램이 시작된 이후 연결의 총 연결 끊기 이벤트 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ConnectionsReconnected">
      <summary>응용 프로그램이 시작된 이후 연결의 총 다시 연결 이벤트 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsAllPerSec">
      <summary>처리된 모든 초당 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsAllTotal">
      <summary>응용 프로그램이 시작된 이후 처리된 총 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubInvocationPerSec">
      <summary>초당 허브 호출 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubInvocationTotal">
      <summary>응용 프로그램이 시작된 이후 처리된 총 허브 호출 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubResolutionPerSec">
      <summary>초당 허브 확인 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsHubResolutionTotal">
      <summary>응용 프로그램이 시작된 이후 처리된 총 허브 확인 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsTransportPerSec">
      <summary>초당 전송 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ErrorsTransportTotal">
      <summary>응용 프로그램이 시작된 이후 처리된 총 전송 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.Initialize(System.String,System.Threading.CancellationToken)">
      <summary>성능 카운터를 초기화합니다.</summary>
      <param name="instanceName">호스트 인스턴스 이름입니다.</param>
      <param name="hostShutdownToken">호스트 종료를 나타내는 CancellationToken입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.LoadCounter(System.String,System.String,System.String,System.Boolean)">
      <summary>성능 카운터를 로드합니다.</summary>
      <param name="categoryName">범주 이름입니다.</param>
      <param name="counterName">카운터 이름입니다.</param>
      <param name="instanceName">인스턴스 이름입니다.</param>
      <param name="isReadOnly">카운터가 읽기 전용이면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusAllocatedWorkers">
      <summary>메시지 버스에서 메시지 배달에 할당된 작업자 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusBusyWorkers">
      <summary>메시지 버스에서 메시지를 배달하는 중인 작업자 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesPublishedPerSec">
      <summary>메시지 버스에 게시된 초당 메시지 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesPublishedTotal">
      <summary>응용 프로그램이 시작된 이후 메시지 버스로 게시된 총 메시지 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesReceivedPerSec">
      <summary>구독자가 수신한 초당 메시지 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusMessagesReceivedTotal">
      <summary>응용 프로그램이 시작된 이후 구독자가 수신한 총 메시지 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersCurrent">
      <summary>메시지 버스에 대한 현재 구독자 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersPerSec">
      <summary>메시지 버스에 대한 초당 새 구독자 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusSubscribersTotal">
      <summary>응용 프로그램이 시작된 이후 메시지 버스에 대한 총 구독자 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.MessageBusTopicsCurrent">
      <summary>메시지 버스에 대한 현재 항목 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutErrorsPerSec">
      <summary>초당 확장 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutErrorsTotal">
      <summary>응용 프로그램이 시작된 이후의 총 확장 오류 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutMessageBusMessagesReceivedPerSec">
      <summary>확장 메시지 버스에서 수신하는 초당 메시지 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutSendQueueLength">
      <summary>현재 확장 송신 큐 길이를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountBuffering">
      <summary>현재 구성된 확장 메시지 버스 공급자에 있는 버퍼링 상태의 논리적 스트림 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountOpen">
      <summary>현재 구성된 확장 메시지 버스 공급자에 있는 열린 상태의 논리적 스트림 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager.ScaleoutStreamCountTotal">
      <summary>현재 구성된 확장 메시지 버스 공급자에 있는 논리적 스트림 수를 나타내는 성능 카운터를 가져옵니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter" />을 반환합니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider.#ctor"></member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider.GetUserId(Microsoft.AspNet.SignalR.IRequest)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver">
      <summary>Provides method for resolving protocol.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.#ctor(System.Version,System.Version)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver" /> class.</summary>
      <param name="min">The minimum version of the protocol to resolve.</param>
      <param name="max">The maximum version of the protocol to resolve.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver.Resolve(Microsoft.AspNet.SignalR.IRequest)">
      <summary>Resolves the protocol in the specified SignalR request.</summary>
      <param name="request">The request to resolve.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Purposes">
      <summary>목적 상수를 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Purposes.ConnectionToken">
      <summary>ConnectionToken 상수입니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Purposes.Groups">
      <summary>Groups 상수입니다.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ServerCommandType">
      <summary>서버 명령을 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Infrastructure.ServerCommandType.RemoveConnection">
      <summary>RemoveConnection 명령입니다.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager">
      <summary>기본 <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager" /> 구현입니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager.ServerId">
      <summary>서버 ID를 가져오거나 설정합니다.</summary>
      <returns>서버 ID입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.IJsonValue">
      <summary>JSON 값을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonValue.CanConvertTo(System.Type)">
      <summary>매개 변수 값을 지정된 <see cref="T:System.Type" />으로 변환합니다.</summary>
      <returns>변환된 매개 변수 값입니다.</returns>
      <param name="type">매개 변수가 변환될 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonValue.ConvertTo(System.Type)">
      <summary>매개 변수 값을 지정된 <see cref="T:System.Type" />으로 변환합니다.</summary>
      <returns>변환된 매개 변수 값입니다.</returns>
      <param name="type">매개 변수가 변환될 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.IJsonWritable">
      <summary>JSON으로의 자체 직렬화를 처리하는 구현입니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.IJsonWritable.WriteJson(System.IO.TextWriter)">
      <summary>
        <see cref="T:System.IO.TextWriter" />를 통해 자체를 JSON으로 직렬화합니다.</summary>
      <param name="writer">JSON으로 직렬화된 개체를 수신하는 <see cref="T:System.IO.TextWriter" />입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions">
      <summary>
        <see cref="T:Newtonsoft.Json.JsonSerializer" />의 확장입니다. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Parse``1(Newtonsoft.Json.JsonSerializer,System.ArraySegment{System.Byte},System.Text.Encoding)">
      <summary>JSON을 .NET 개체로 역직렬화합니다.</summary>
      <returns>JSON 문자열에서 역직렬화된 개체입니다.</returns>
      <param name="serializer">직렬 변환기입니다.</param>
      <param name="jsonBuffer">역직렬화할 JSON 버퍼입니다.</param>
      <param name="encoding">사용할 인코딩입니다.</param>
      <typeparam name="T">역직렬화 중인 개체의 <see cref="T:System.Type" />입니다.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Parse``1(Newtonsoft.Json.JsonSerializer,System.String)">
      <summary>JSON을 .NET 개체로 역직렬화합니다.</summary>
      <returns>JSON 문자열에서 역직렬화된 개체입니다.</returns>
      <param name="serializer">직렬 변환기입니다.</param>
      <param name="json">역직렬화할 JSON입니다.</param>
      <typeparam name="T">역직렬화 중인 개체의 <see cref="T:System.Type" />입니다.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Serialize(Newtonsoft.Json.JsonSerializer,System.Object,System.IO.TextWriter)">
      <summary>지정된 개체를 <see cref="T:System.IO.TextWriter" />로 직렬화합니다.</summary>
      <param name="serializer">JSON 직렬 변환기입니다.</param>
      <param name="value">직렬화할 개체입니다.</param>
      <param name="writer">개체가 직렬화될 <see cref="T:System.IO.TextWriter" />입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions.Stringify(Newtonsoft.Json.JsonSerializer,System.Object)">
      <summary>지정된 개체를 JSON 문자열로 직렬화합니다.</summary>
      <returns>개체의 JSON 문자열 표현입니다.</returns>
      <param name="serializer">직렬 변환기입니다.</param>
      <param name="value">직렬화할 개체입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Json.JsonUtility">
      <summary> 일반적인 JSON 작업을 위한 도우미 클래스입니다. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CamelCase(System.String)">
      <summary>지정된 이름을 캐멀 문자(camel case)로 변환합니다.</summary>
      <returns>지정된 <paramref name="name" />의 캐멀 문자(camel case) 값입니다.</returns>
      <param name="name">변환할 값입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateDefaultSerializer">
      <summary>기본 설정을 사용하여 <see cref="T:Newtonsoft.Json.JsonSerializer" /> 인스턴스를 만듭니다.</summary>
      <returns>새로 만든 <see cref="T:Newtonsoft.Json.JsonSerializerSettings" />입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateDefaultSerializerSettings">
      <summary>기본 <see cref="T:Newtonsoft.Json.JsonSerializerSettings" /> 인스턴스를 만듭니다.</summary>
      <returns>새로 만든 <see cref="T:Newtonsoft.Json.JsonSerializerSettings" />입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Json.JsonUtility.CreateJsonpCallback(System.String,System.String)">
      <summary>JSONP 콜백을 만듭니다.</summary>
      <returns>콜백을 나타내는 <see cref="T:System.String" />입니다.</returns>
      <param name="callback">만들 콜백입니다.</param>
      <param name="payload">페이로드입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Json.JsonUtility.JavaScriptMimeType">
      <summary>Javascript에 대한 MIME 형식을 가져옵니다.</summary>
      <returns>Javascript에 대한 MIME 형식입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Json.JsonUtility.JsonMimeType">
      <summary>이 JSON 유틸리티에 대한 MIME 형식을 가져옵니다.</summary>
      <returns>이 JSON 유틸리티에 대한 MIME 형식입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Command">
      <summary>SignalR 메시징에서 사용 중인 명령을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Command.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Messaging.Command" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.CommandType">
      <summary>명령 유형을 가져오거나 설정합니다.</summary>
      <returns>명령 유형입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.Id">
      <summary>명령 식별자를 가져오거나 설정합니다.</summary>
      <returns>명령 식별자입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.Value">
      <summary>명령 값을 가져오거나 설정합니다.</summary>
      <returns>명령 값입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Command.WaitForAck">
      <summary>명령을 실행하기 전 인증서를 기다리는지 여부를 가져오거나 설정합니다.</summary>
      <returns>명령을 실행하기 전 인증서를 기다리면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.CommandType">
      <summary>연결 메시지에 대한 명령을 열거합니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Abort">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.AddToGroup">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Disconnect">
      <summary />
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.Initializing">
      <summary>연결을 초기화할 명령을 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.CommandType.RemoveFromGroup">
      <summary />
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.IMessageBus">
      <summary>SignalR 메시지 버스에서 메시지를 게시 및 구독하는 데 사용되는 메서드를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.IMessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.IMessageBus.Subscribe(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>메시지 버스에서 구독자에 대한 항목 구독을 설정합니다.</summary>
      <returns>구독의 상태입니다.</returns>
      <param name="subscriber">구독자입니다.</param>
      <param name="cursor">구독 작업을 나타내는 읽기 커서입니다.</param>
      <param name="callback">콜백 함수입니다.</param>
      <param name="maxMessages">메시지 버퍼의 크기입니다.</param>
      <param name="state">콜백 작업의 상태입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ISubscriber">
      <summary>SignalR 메시지 버스의 구독자에 대한 세부 정보를 제공합니다.</summary>
    </member>
    <member name="E:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeyAdded"></member>
    <member name="E:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeyRemoved"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.EventKeys"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.Identity"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.Subscription">
      <summary>구독을 가져오거나 설정합니다.</summary>
      <returns>구독입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscriber.WriteCursor">
      <summary>쓰기 커서를 가져오거나 설정합니다.</summary>
      <returns>쓰기 커서입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ISubscription">
      <summary>작업을 수행하고 구독 상태를 제어하는 메서드를 제공합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ISubscription.Identity">
      <summary>구독 ID를 가져오거나 설정합니다.</summary>
      <returns>구독의 ID입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.SetQueued">
      <summary>구독을 작업 중 상태로 설정합니다.</summary>
      <returns>구독이 작업 중 상태로 설정되었으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.UnsetQueued">
      <summary>구독을 유휴 상태로 설정합니다.</summary>
      <returns>구독이 유휴 상태로 설정되었으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ISubscription.Work">
      <summary>이 구독을 통해 구독한 메시지에서 작업을 수행합니다.</summary>
      <returns>구독한 메시지의 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo">
      <summary>여기에 있는 콘텐츠는 업데이트되지 않습니다. 여기에 자료를 추가하지 마십시오.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.#ctor(System.String,System.UInt64,Microsoft.AspNet.SignalR.Messaging.MessageStore{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="key">로컬 이벤트와 연관된 키입니다.</param>
      <param name="id">키 정보와 연관된 식별자입니다.</param>
      <param name="store">로컬 이벤트 키와 연관된 메시지 저장소입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.Id">
      <summary>키 정보와 연관된 식별자를 가져오거나 설정합니다.</summary>
      <returns>키 정보와 연관된 식별자입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.Key">
      <summary>로컬 이벤트와 연관된 키를 가져오거나 설정합니다.</summary>
      <returns>로컬 이벤트와 연관된 키입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo.MessageStore">
      <summary>키에 대한 메시지를 가져옵니다.</summary>
      <returns>키에 대한 메시지입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Message">
      <summary>여기에 있는 콘텐츠는 업데이트되지 않습니다. 여기에 자료를 추가하지 마십시오.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Messaging.Message" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor(System.String,System.String,System.ArraySegment{System.Byte})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.#ctor(System.String,System.String,System.String)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Messaging.Message" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="source">메시지의 원본입니다.</param>
      <param name="key">키 메시지입니다.</param>
      <param name="value">메시지의 값입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.CommandId">
      <summary>메시지의 명령 식별자를 가져오거나 설정합니다.</summary>
      <returns>메시지의 명령 식별자입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Encoding">
      <summary>메시지의 인코딩입니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Filter">
      <summary>메시지 필터를 가져오거나 설정합니다.</summary>
      <returns>메시지 필터입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.GetString"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.IsAck">
      <summary>메시지가 승인 메시지인지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>메시지가 승인 메시지이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.IsCommand">
      <summary>메시지가 명령 메시지인지를 나타내는 값을 가져옵니다.</summary>
      <returns>메시지가 명령 메시지이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Key">
      <summary>메시지에 대한 키를 가져오거나 설정합니다.</summary>
      <returns>메시지에 대한 키입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.MappingId">
      <summary>페이로드 ID입니다.확장 시나리오에서만 사용됩니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.ReadFrom(System.IO.Stream)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Source">
      <summary>메시지의 원본을 가져오거나 설정합니다.</summary>
      <returns>메시지의 원본입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.StreamIndex">
      <summary>이 메시지가 전송된 스트림 인덱스입니다.확장 시나리오에서만 사용됩니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.Value">
      <summary>메시지의 값을 가져오거나 설정합니다.</summary>
      <returns>메시지의 값입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Message.WaitForAck">
      <summary>메시지가 승인을 기다리는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>메시지가 승인을 기다리면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Message.WriteTo(System.IO.Stream)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker">
      <summary>특정 구독에 대해 수행될 작업을 예약하고 여러 작업자(스레드 풀의 스레드) 중에서 예정된 작업을 처리할 작업자를 선택할 수 있는 알고리즘이 포함되어 있습니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.#ctor(Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="performanceCounterManager">성능 카운터 관리자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Dispose">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" />에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Dispose(System.Boolean)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageBroker" />에서 사용하는 모든 리소스를 해제합니다.</summary>
      <param name="disposing">관리된 리소스와 관리되지 않은 리소스를 해제하려면 true이고, 관리되지 않은 리소스만 해제하려면 false입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Schedule(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>지정된 구독에 대한 작업을 예약합니다.</summary>
      <param name="subscription">예약할 구독입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBroker.Trace">
      <summary>브로커의 추적 원본을 가져오거나 설정합니다.</summary>
      <returns>브로커의 추적 원본입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBus">
      <summary>SignalR에 대한 메시지 버스를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.#ctor(Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier,Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Configuration.IConfigurationManager,System.Int32)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Counters"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.CreateSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>구독자에 대한 새 구독을 만듭니다.</summary>
      <returns>새로 만든 구독입니다.</returns>
      <param name="subscriber">구독자입니다.</param>
      <param name="cursor">구독 작업을 나타내는 읽기 커서입니다.</param>
      <param name="callback">콜백 함수입니다.</param>
      <param name="messageBufferSize">메시지 버퍼의 크기입니다.</param>
      <param name="state">콜백 작업의 상태입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.CreateTopic(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Dispose"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Dispose(System.Boolean)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Save(Microsoft.AspNet.SignalR.Messaging.Message)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.ScheduleEvent(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBus.Subscribe(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>메시지 버스에서 구독자에 대한 항목 구독을 설정합니다.</summary>
      <returns>구독의 상태입니다.</returns>
      <param name="subscriber">구독자입니다.</param>
      <param name="cursor">구독 작업을 나타내는 읽기 커서입니다.</param>
      <param name="callback">콜백 함수입니다.</param>
      <param name="maxMessages">메시지 버퍼의 크기입니다.</param>
      <param name="state">콜백 작업의 상태입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Topics"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageBus.Trace">
      <summary>코드 실행을 추적하는 데 사용되는 추적 원본을 가져옵니다.</summary>
      <returns>코드 실행을 추적하는 데 사용되는 추적 원본입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions">
      <summary>SignalR 메시지 버스에 대한 확장 메서드를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Enumerate(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Action{Microsoft.AspNet.SignalR.Messaging.Message})"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Enumerate``1(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Func{Microsoft.AspNet.SignalR.Messaging.Message,System.Boolean},System.Action{``0,Microsoft.AspNet.SignalR.Messaging.Message},``0)">
      <summary>메시지를 열거합니다.</summary>
      <param name="messages">열거할 메시지가 포함된 목록입니다.</param>
      <param name="filter">열거되고 있는 메시지를 필터링하는 메서드입니다.</param>
      <param name="onMessage">열거되고 있는 각 메시지를 처리하는 메서드입니다.</param>
      <param name="state">작업의 상태를 나타내는 개체입니다.</param>
      <typeparam name="T">
        <paramref name="state" /> 매개 변수의 유형입니다.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions.Publish(Microsoft.AspNet.SignalR.Messaging.IMessageBus,System.String,System.String,System.String)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageResult">
      <summary>메시지 결과를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageResult.#ctor(System.Boolean)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="terminal">이 결과가 터미널 메시지 결과임을 나타내려면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageResult.#ctor(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="messages">이 <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageResult" />와 연관된 메시지 배열입니다.</param>
      <param name="totalCount">메시지 배열에 채워진 메시지 수입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.Messages">
      <summary>결과와 연관된 <see cref="T:System.Collections.Generic.IList`1" />을 가져옵니다.</summary>
      <returns>결과와 연관된 <see cref="T:System.Collections.Generic.IList`1" />입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.Terminal">
      <summary>이 결과가 터미널 메시지 결과인지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>이 결과가 터미널 메시지 결과이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.MessageResult.TerminalMessage">
      <summary>이 결과가 터미널 메시지 결과인지를 지정합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageResult.TotalCount">
      <summary>메시지 배열에 채워진 메시지 수를 가져오거나 설정합니다.</summary>
      <returns>메시지 배열에 채워진 메시지 수입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1">
      <summary>링 버퍼로 지원되는 메시지 저장소를 나타냅니다.</summary>
      <typeparam name="T">저장소에 있는 요소의 형식입니다.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.#ctor(System.UInt32)">
      <summary>지정한 용량을 사용하여 <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="capacity">저장소의 최소 용량입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.#ctor(System.UInt32,System.UInt32)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStore`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="capacity">저장소의 최소 용량입니다.</param>
      <param name="offset">저장소에 있는 첫 번째 메시지의 오프셋입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.Add(`0)">
      <summary>저장소에 메시지를 추가하고 새로 추가된 메시지의 ID를 반환합니다.</summary>
      <returns>새로 추가된 메시지의 ID입니다.</returns>
      <param name="message">추가할 메시지입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.GetMessageCount">
      <summary>저장소에 있는 메시지 수를 가져옵니다.</summary>
      <returns>저장소에 있는 메시지 수입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStore`1.GetMessages(System.UInt64,System.Int32)">
      <summary>지정된 ID로 시작하는 메시지의 다음 일괄 처리를 가져옵니다. </summary>
      <returns>메시지의 다음 일괄 처리입니다.</returns>
      <param name="firstMessageId">첫 번째 메시지 ID입니다.</param>
      <param name="maxMessages">반환할 최대 메시지 수입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1">
      <summary>메시지 저장소와 연관된 결과를 나타냅니다.</summary>
      <typeparam name="T">결과의 형식입니다.</typeparam>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.#ctor(System.UInt64,System.ArraySegment{`0},System.Boolean)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="firstMessageId">첫 번째 메시지의 식별자입니다.</param>
      <param name="messages">결과와 연관된 메시지입니다.</param>
      <param name="hasMoreData">결과에 더 많은 데이터가 있으면 true이고, 그렇지 않으면 false입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.FirstMessageId">
      <summary>첫 번째 메시지의 식별자를 가져옵니다.</summary>
      <returns>첫 번째 메시지의 식별자입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.HasMoreData">
      <summary>결과에 더 많은 데이터가 있는지 여부를 가져옵니다.</summary>
      <returns>결과에 더 많은 데이터가 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1.Messages">
      <summary>결과와 연관된 메시지를 가져옵니다.</summary>
      <returns>결과와 연관된 메시지입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration">
      <summary>확장 메시지 버스 구현에 사용되는 일반 설정을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.DisableQueuing">
      <summary>현재 큐를 사용할 수 없습니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration.MaxQueueLength">
      <summary>나가는 송신 큐의 최대 길이를 가져오거나 설정합니다.</summary>
      <returns>나가는 송신 큐의 최대 길이입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping">
      <summary>여기에 있는 콘텐츠는 업데이트되지 않습니다. 여기에 자료를 추가하지 마십시오.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.#ctor(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.#ctor(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.Id"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.LocalKeyInfo"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping.ServerCreationTime"></member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore">
      <summary>Represents a scale out mapping store on SignalR messaging.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.Add(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo})">
      <summary>Adds a new scaleout mapping store.</summary>
      <param name="id">The identifier.</param>
      <param name="message">The message.</param>
      <param name="localKeyInfo">The local key information.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.GetEnumerator(System.UInt64)">
      <summary>Gets the enumerator for the mapping store.</summary>
      <returns>The enumerator for the mapping store.</returns>
      <param name="id">The identifier.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore.MaxMapping">
      <summary>Gets the maximum numbers of mapping for this instance.</summary>
      <returns>The maximum numbers of mapping for this instance.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage">
      <summary>Represents a message to the scaleout backplane.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.#ctor(System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class.</summary>
      <param name="messages">The messages from SignalR.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.FromBytes(System.Byte[])">
      <summary>Creates a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> class from the specified data in bytes.</summary>
      <returns>The created instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" />.</returns>
      <param name="data">The data in bytes.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.Messages">
      <summary>Gets or sets the messages from SignalR.</summary>
      <returns>The messages from SignalR.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.ServerCreationTime">
      <summary>Gets or sets the time the message was created on the origin server.</summary>
      <returns>The time the message was created on the origin server.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage.ToBytes">
      <summary>Converts a <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> object to bytes.</summary>
      <returns>The converted <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage" /> object to bytes.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus">
      <summary>확장 메시지 버스 구현에 사용되는 일반 기본 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver,Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Close(System.Int32)">
      <param name="streamIndex">닫을 스트림 인덱스입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.CreateSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Dispose(System.Boolean)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.OnError(System.Int32,System.Exception)">
      <summary>모든 전송을 비동기적으로 실패하게 만든 원인이 되는 메시지를 전송하도록 지정된 큐를 닫습니다.</summary>
      <param name="streamIndex">닫을 스트림 인덱스입니다.</param>
      <param name="exception">발생한 오류입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.OnReceived(System.Int32,System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage)">
      <summary>페이로드가 백플레인에서 수신될 때 호출됩니다.활성 호출은 항상 하나만 있어야 합니다.</summary>
      <param name="streamIndex">스트림의 ID입니다.</param>
      <param name="id">해당 스트림에 있는 페이로드의 ID입니다.</param>
      <param name="message">확장 메시지입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Open(System.Int32)">
      <param name="streamIndex">열 스트림의 인덱스입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)">
      <summary>확장 메시지 버스에서 메시지를 게시합니다.</summary>
      <returns>메시지를 게시하는 작업을 나타내는 작업입니다.</returns>
      <param name="message">게시할 메시지입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Send(System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
      <summary>SignalR 확장 메시지 버스에서 메시지를 보냅니다.</summary>
      <returns>메시지를 보내는 작업을 나타내는 작업입니다.</returns>
      <param name="messages">보낼 메시지입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.Send(System.Int32,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus.StreamCount">
      <summary>이 인스턴스 수명에 대한 스트림 수를 변경할 수 없습니다.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore">
      <summary>Represents a message store that is backed by a ring buffer.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.#ctor(System.UInt32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore" /> class.</summary>
      <param name="capacity">The minimum capacity of the store.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.Add(Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping)">
      <summary>Adds a message to the store and returns the ID of the newly added message.</summary>
      <returns>The ID of the newly added message.</returns>
      <param name="mapping">The mapping used in the store.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.FragmentCount">
      <summary>Gets or sets the number of message fragments in the store.</summary>
      <returns>The number of message fragments.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.FragmentSize">
      <summary>Gets or sets the size of the message fragment.</summary>
      <returns>The size of the message fragment.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.GetMessages(System.UInt64)">
      <summary>Gets the next batch of messages, beginning with the specified ID. </summary>
      <returns>The next batch of messages.</returns>
      <param name="firstMessageIdRequestedByClient">The first message ID requested by the client.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.GetMessagesByMappingId(System.UInt64)">
      <summary>Gets the next batch of messages for the specified mapping ID.</summary>
      <returns>The next batch of messages.</returns>
      <param name="mappingId">The mapping ID.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.ScaleoutStore.MaxMapping">
      <summary>Gets or sets the maximum mapping ID.</summary>
      <returns>The maximum mapping ID.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription">
      <summary>확장된 구독을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore},System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,System.Object)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="identity">구독 ID입니다.</param>
      <param name="eventKeys">구독에 대한 이벤트 키입니다.</param>
      <param name="cursor">쓰기 커서입니다.</param>
      <param name="streams">쓰기 커서에 연관시키는 데 사용되는 스트림입니다.</param>
      <param name="callback">구독 상태가 변경될 때 실행되는 콜백 함수입니다.</param>
      <param name="maxMessages">이 구독에 할당된 최대 메시지 수입니다.</param>
      <param name="counters">구독 성능 카운터에 액세스하는 데 사용되는 개체입니다.</param>
      <param name="state">구독의 상태입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.BeforeInvoke(System.Object)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.PerformWork(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32@,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription.WriteCursor(System.IO.TextWriter)">
      <summary>지정된 텍스트 기록기를 사용하여 커서를 씁니다.</summary>
      <param name="textWriter">커서를 쓰는 데 사용되는 텍스트 기록기입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Subscription">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Messaging.ISubscription" /> 클래스의 구현을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,System.Object)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Messaging.Subscription" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="identity">구독의 ID입니다.</param>
      <param name="eventKeys">구독에 대한 이벤트 키가 포함된 목록입니다.</param>
      <param name="callback">구독 상태가 변경될 때 실행되는 콜백 함수입니다.</param>
      <param name="maxMessages">이 구독에 할당된 최대 메시지 수입니다.</param>
      <param name="counters">구독 성능 카운터에 액세스하는 데 사용되는 개체입니다.</param>
      <param name="state">구독의 상태입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.AddEvent(System.String,Microsoft.AspNet.SignalR.Messaging.Topic)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.BeforeInvoke(System.Object)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.Disposable">
      <summary>구독 리소스를 삭제하는 데 사용되는 메서드를 가져오거나 설정합니다.</summary>
      <returns>구독 리소스를 삭제하는 데 사용되는 메서드입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Dispose"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Dispose(System.Boolean)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.EventKeys"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.Identity"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Invoke(Microsoft.AspNet.SignalR.Messaging.MessageResult)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Subscription.MaxMessages"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.PerformWork(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32@,System.Object@)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.RemoveEvent(System.String)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.SetEventTopic(System.String,Microsoft.AspNet.SignalR.Messaging.Topic)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.SetQueued"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.UnsetQueued"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.Work"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Subscription.WriteCursor(System.IO.TextWriter)">
      <summary>지정된 텍스트 기록기를 사용하여 커서를 씁니다.</summary>
      <param name="textWriter">커서를 쓰는 데 사용되는 텍스트 기록기입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.Topic">
      <summary>SignalR 메시지 버스의 항목을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.#ctor(System.UInt32,System.TimeSpan)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Messaging.Topic" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="storeSize">메시지 저장소의 크기입니다.</param>
      <param name="lifespan">항목 수명입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.AddSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>지정된 구독을 목록에 추가합니다.</summary>
      <param name="subscription">추가할 구독입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.IsExpired">
      <summary>항목이 만료되었는지를 나타내는 값을 가져옵니다.</summary>
      <returns>항목이 만료되었으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.LastUsed">
      <summary>마지막으로 구독이 사용된 시간을 가져오거나 설정합니다.</summary>
      <returns>마지막으로 구독이 사용된 시간입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.MarkUsed"></member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.Topic.RemoveSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
      <summary>지정된 구독을 목록에서 삭제합니다.</summary>
      <param name="subscription">삭제할 구독입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.Store">
      <summary>메시지 저장소를 가져오거나 설정합니다.</summary>
      <returns>메시지 저장소입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.SubscriptionLock">
      <summary>항목을 잠그는 데 사용되는 개체를 가져오거나 설정합니다.</summary>
      <returns>항목을 잠그는 데 사용되는 개체입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.Topic.Subscriptions">
      <summary>항목 구독이 포함된 목록을 가져오거나 설정합니다.</summary>
      <returns>항목 구독이 포함된 목록입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Messaging.TopicLookup">
      <summary>조회로 사용되는 항목의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Messaging.TopicLookup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Clear">
      <summary>컬렉션에서 모든 항목을 제거합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.ContainsKey(System.String)">
      <summary>지정된 키의 항목이 컬렉션에 포함되어 있는지 여부를 확인합니다.</summary>
      <returns>지정된 키의 항목이 컬렉션에 포함되어 있으면 true, 그렇지 않으면 false입니다.</returns>
      <param name="key">항목의 키입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Count">
      <summary>컬렉션에 있는 모든(일반 및 그룹) 항목의 수를 가져옵니다.</summary>
      <returns>컬렉션에 있는 모든(일반 및 그룹) 항목의 수입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.GetEnumerator">
      <summary>컬렉션 전체를 반복하는 열거자를 가져옵니다.</summary>
      <returns>컬렉션을 반복하는 데 사용할 수 있는 열거자입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.GetOrAdd(System.String,System.Func{System.String,Microsoft.AspNet.SignalR.Messaging.Topic})">
      <summary>키가 아직 없는 경우 지정된 함수를 사용하여 컬렉션에 항목을 추가합니다.</summary>
      <returns>지정된 키에 대해 생성된 항목입니다.</returns>
      <param name="key">추가할 항목의 키입니다.</param>
      <param name="factory">키에 대한 항목을 생성하는 데 사용되는 함수입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Messaging.TopicLookup.Item(System.String)">
      <summary>지정된 키의 항목을 가져옵니다.</summary>
      <returns>찾은 경우 지정된 키의 항목이고, 항목을 찾을 수 없는 경우 null입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.System#Collections#IEnumerable#GetEnumerator">
      <summary>컬렉션 전체를 반복하는 열거자를 가져옵니다.</summary>
      <returns>컬렉션을 반복하는 데 사용할 수 있는 열거자입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.TryGetValue(System.String,Microsoft.AspNet.SignalR.Messaging.Topic@)">
      <summary>컬렉션에서 지정된 키의 항목을 가져오려고 시도합니다.</summary>
      <returns>키가 있으면 true, 그렇지 않으면 false입니다.</returns>
      <param name="key">가져올 키입니다.</param>
      <param name="topic">이 메서드가 반환될 때 검색된 항목을 포함합니다.이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Messaging.TopicLookup.TryRemove(System.String)">
      <summary>컬렉션에서 지정된 키가 있는 항목을 제거 및 반환하려고 시도합니다.</summary>
      <returns>제거된 항목입니다.</returns>
      <param name="key">제거할 항목의 키입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.ServerRequest">
      <summary>서버 요청을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerRequest.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Owin.ServerRequest" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="environment">환경입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Cookies">
      <summary>서버와 연관된 쿠키를 가져옵니다.</summary>
      <returns>서버와 연관된 쿠키입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Environment"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Headers">
      <summary>요청과 연관된 헤더를 가져옵니다.</summary>
      <returns>요청과 연관된 헤더입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.LocalPath"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.QueryString">
      <summary>서버 쿼리 문자열 변수 컬렉션을 가져옵니다.</summary>
      <returns>서버 쿼리 문자열 변수 컬렉션입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerRequest.ReadForm"></member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.Url">
      <summary>현재 요청의 URL에 대한 정보를 가져옵니다.</summary>
      <returns>현재 요청의 URL에 대한 정보가 포함된 <see cref="T:System.Uri" /> 개체입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerRequest.User">
      <summary>이 서버에 대한 사용자를 가져옵니다.</summary>
      <returns>이 서버에 대한 사용자입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.ServerResponse">
      <summary>요청에 대한 응답으로 서버 피드백을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Owin.ServerResponse" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="environment">환경입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerResponse.CancellationToken">
      <summary>응답과 연관된 취소 토큰을 가져옵니다.</summary>
      <returns>응답과 연관된 취소 토큰입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Owin.ServerResponse.ContentType">
      <summary>응답과 연관된 콘텐츠 형식을 가져오거나 설정합니다.</summary>
      <returns>응답과 연관된 콘텐츠 형식입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.Flush">
      <summary>이 인스턴스를 플러시합니다.</summary>
      <returns>플러시된 인스턴스입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.ServerResponse.Write(System.ArraySegment{System.Byte})">
      <summary>연관된 배열 세그먼트를 사용하여 응답을 씁니다.</summary>
      <param name="data">배열 세그먼트입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware">
      <summary>Represents the middleware used by the hub dispatcher.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware.Invoke(Microsoft.Owin.IOwinContext)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware">
      <summary>영구 연결에 사용되는 미들웨어를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)"></member>
    <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware.Invoke(Microsoft.Owin.IOwinContext)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Tracing.ITraceManager">
      <summary>코드 실행을 추적하기 위한 속성을 제공하는 인터페이스를 나타냅니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.ITraceManager.Item(System.String)">
      <summary>지정된 원본 이름을 사용하여 <see cref="T:System.Diagnostics.TraceSource" />를 가져옵니다.</summary>
      <returns>지정된 원본 이름을 사용하는 <see cref="T:System.Diagnostics.TraceSource" />입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.ITraceManager.Switch">
      <summary>코드 실행 추적 및 디버깅 출력을 제어하는 스위치를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.SourceSwitch" /> 개체입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Tracing.TraceManager">
      <summary>코드 실행을 추적할 수 있는 속성을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Tracing.TraceManager.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Tracing.TraceManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Tracing.TraceManager.#ctor(System.Diagnostics.TextWriterTraceListener)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.TraceManager.Item(System.String)">
      <summary>지정된 원본 이름을 사용하여 <see cref="T:System.Diagnostics.TraceSource" />를 가져옵니다.</summary>
      <returns>지정된 원본 이름을 사용하는 <see cref="T:System.Diagnostics.TraceSource" />입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Tracing.TraceManager.Switch">
      <summary>코드 실행 추적 및 디버깅 출력을 제어하는 스위치를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.SourceSwitch" /> 개체입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport">
      <summary>Forever Frame Transport를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="context">호스트 컨텍스트입니다.</param>
      <param name="resolver">종속성 확인자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>응답 개체를 초기화합니다.</summary>
      <returns>응답 초기화 작업을 나타내는 <see cref="T:System.Threading.Tasks.Task" />입니다.</returns>
      <param name="connection">전송 연결입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.KeepAlive">
      <summary>연결을 유지합니다.</summary>
      <returns>연결 유지 작업을 나타내는 <see cref="T:System.Threading.Tasks.Task" />입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.OutputWriter">
      <summary>출력 스트림에 컨텍스트 응답을 쓰는 HTML 텍스트 기록기를 가져옵니다.</summary>
      <returns>출력 스트림에 컨텍스트 응답을 쓰는 HTML 텍스트 기록기입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>지정된 컨텍스트 응답을 보냅니다.</summary>
      <returns>응답 작업을 나타내는 <see cref="T:System.Threading.Tasks.Task" />입니다.</returns>
      <param name="response">보낼 응답입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport">
      <summary>여기에 있는 콘텐츠는 업데이트되지 않습니다. 여기에 자료를 추가하지 마십시오.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="context">호스트 컨텍스트입니다.</param>
      <param name="resolver">종속성 확인자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="context">호스트 컨텍스트입니다.</param>
      <param name="jsonSerializer">jsonSerializer입니다.</param>
      <param name="heartbeat">전송 하트비트입니다.</param>
      <param name="performanceCounterWriter">성능 카운터 기록기입니다.</param>
      <param name="traceManager">추적 관리자입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Connected">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />에 대한 connection 함수를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />에 대한 connection 함수입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
      <summary>전송을 위한 큐 삽입 작업을 제공합니다.</summary>
      <returns>전송을 위한 큐 삽입 작업입니다.</returns>
      <param name="writeAsync">비동기적으로 씁니다.</param>
      <param name="state">상태 개체입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.InitializePersistentState">
      <summary>영구 전송의 유지 상태를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>영구 전송에 대한 연결 응답을 초기화합니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />을 반환합니다.</returns>
      <param name="connection">전송 연결입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.JsonSerializer">
      <summary>영구 전송에 대한 JsonSerializer를 가져옵니다.</summary>
      <returns>영구 전송에 대한 JsonSerializer입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.LastMessageId">
      <summary>영구 전송에 대한 마지막 메시지 ID를 가져옵니다.</summary>
      <returns>영구 전송에 대한 마지막 메시지 ID입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.OnSending(System.String)">
      <summary>보내는 전송에 대한 페이로드를 제공합니다.</summary>
      <param name="payload">문자열 페이로드입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.OnSendingResponse(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>보내는 메서드에 대한 응답을 제공합니다.</summary>
      <param name="response">연결에 대한 응답입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>요청을 처리하는 연결을 제공합니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />을 반환합니다.</returns>
      <param name="connection">전송 연결입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.ProcessRequestCore(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>전송에 대한 연결을 처리하는 요청을 제공합니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />을 반환합니다.</returns>
      <param name="connection">전송 연결입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Received">
      <summary>영구 전송을 위해 받을 함수를 가져오거나 설정합니다.</summary>
      <returns>영구 전송을 위해 받을 함수입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Reconnected">
      <summary>영구 전송에 대한 reconnected 함수를 가져오거나 설정합니다.</summary>
      <returns>영구 전송에 대한 reconnected 함수입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>영구 전송에 대한 연결에 응답을 보냅니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />을 반환합니다.</returns>
      <param name="response">영구 응답입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ForeverTransport.Send(System.Object)">
      <summary>영구 전송에 개체를 보냅니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />을 반환합니다.</returns>
      <param name="value">보낼 값입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ForeverTransport.TransportConnected">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />에 대해 연결된 전송을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.ForeverTransport" />에 대해 연결된 전송입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITrackingConnection">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat" />로 추적할 수 있는 연결을 나타냅니다. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ApplyState(Microsoft.AspNet.SignalR.Transports.TransportConnectionStates)">
      <summary> 연결에 새 상태를 적용합니다. </summary>
      <param name="states">
        <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates" /> 열거형의 값 중 하나입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.CancellationToken"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ConnectionId"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.ConnectTask"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Disconnect"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.DisconnectThreshold"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.End"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.IsAlive"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.IsTimedOut"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.KeepAlive"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.SupportsKeepAlive"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Timeout"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITrackingConnection.Url"></member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransport">
      <summary>통신할 전송을 나타냅니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Connected">
      <summary>초기 연결이 전송에 연결될 때 호출되는 콜백을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Func`1" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.ConnectionId">
      <summary>전송에 대한 연결 ID를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.String" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Disconnected">
      <summary>전송의 연결이 끊어졌을 때 호출되는 콜백을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Func`1" />을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>이 전송에 대한 지정된 <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />을 처리합니다.</summary>
      <returns>전송에서 연결 처리를 완료했을 때 완료되는 <see cref="T:System.Threading.Tasks.Task" />입니다.</returns>
      <param name="connection">처리할 <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Received">
      <summary>전송에서 데이터를 받을 때 호출되는 콜백을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Func`2" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.Reconnected">
      <summary>전송이 다시 연결될 때 호출되는 콜백을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Func`1" />을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransport.Send(System.Object)">
      <summary>전송을 통해 데이터를 보냅니다.</summary>
      <returns>보내기가 완료될 때 완료되는 <see cref="T:System.Threading.Tasks.Task" />입니다.</returns>
      <param name="value">보낼 값입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.ITransport.TransportConnected">
      <summary>전송이 연결될 때 호출되는 콜백을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Func`1" />을 반환합니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection">
      <summary>연결에 대한 전송을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportConnection.Receive(System.String,System.Func{Microsoft.AspNet.SignalR.Transports.PersistentResponse,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
      <summary>전송을 통해 구독 데이터를 받습니다.</summary>
      <returns>전송을 통한 구독 데이터입니다.</returns>
      <param name="messageId">구독에 대한 메시지 ID입니다.</param>
      <param name="callback">받은 메시지를 처리하는 메서드입니다.</param>
      <param name="maxMessages">메시지 버퍼 크기입니다.</param>
      <param name="state">전송 연결의 상태입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportConnection.Send(Microsoft.AspNet.SignalR.ConnectionMessage)"></member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat">
      <summary>연결 상태 추적을 관리합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.AddOrUpdateConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>추적된 연결 목록에 새 연결을 추가합니다.</summary>
      <returns>대체된 연결입니다(있는 경우).</returns>
      <param name="connection">추가될 연결입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.GetConnections">
      <summary>추적 중인 연결 목록을 가져옵니다.</summary>
      <returns>연결 목록입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.MarkConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>기존 연결을 활성으로 표시합니다.</summary>
      <param name="connection">표시할 연결입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat.RemoveConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>추적된 연결 목록에서 연결을 제거합니다.</summary>
      <param name="connection">제거할 연결입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ITransportManager">
      <summary>연결을 위한 전송을 관리합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportManager.GetTransport(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>지정된 <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />에 대한 지정된 전송을 가져옵니다.</summary>
      <returns>지정된 <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransport" />입니다.</returns>
      <param name="hostContext">현재 요청에 대한 <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ITransportManager.SupportsTransport(System.String)">
      <summary>지정된 전송이 지원되는지 여부를 확인합니다.</summary>
      <returns>전송이 지원되면 True, 그렇지 않으면 False입니다.</returns>
      <param name="transportName">테스트할 전송의 이름입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.LongPollingTransport">
      <summary>여기에 있는 콘텐츠는 업데이트되지 않습니다. 여기에 자료를 추가하지 마십시오.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.LongPollingTransport" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="context">호스트 컨텍스트입니다.</param>
      <param name="resolver">종속성 확인자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Configuration.IConfigurationManager)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Connected">
      <summary>connected 함수를 가져오거나 설정합니다.</summary>
      <returns>connected 함수입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.DisconnectThreshold">
      <summary>연결 끊기 임계값을 가져옵니다.</summary>
      <returns>연결 끊기 임계값입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.IsConnectRequest">
      <summary>전송이 연결 요청인지를 나타내는 값을 가져옵니다.</summary>
      <returns>전송이 연결 요청이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>연결 요청을 처리합니다.</summary>
      <returns>요청 작업을 나타내는 작업입니다.</returns>
      <param name="connection">처리할 연결입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Received">
      <summary>received 함수를 가져오거나 설정합니다.</summary>
      <returns>received 함수입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Reconnected">
      <summary>다시 연결된 전송을 가져오거나 설정합니다.</summary>
      <returns>전송을 다시 연결하는 작업입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>전송에 대한 응답을 보냅니다.</summary>
      <returns>응답을 보내는 작업을 나타내는 작업입니다.</returns>
      <param name="response">보낼 응답입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.Send(System.Object)">
      <summary>지정된 값으로 긴 폴링 전송을 보냅니다.</summary>
      <returns>긴 폴링 전송을 보내는 작업을 나타내는 작업입니다.</returns>
      <param name="value">값입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.SupportsKeepAlive">
      <summary>전송에서 연결 유지가 지원되는지를 나타내는 값을 가져옵니다.</summary>
      <returns>전송에서 연결 유지가 지원되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.LongPollingTransport.TransportConnected">
      <summary>연결된 전송을 가져오거나 설정합니다.</summary>
      <returns>전송을 연결하는 작업입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse">
      <summary> 연결에 대한 응답을 나타냅니다. </summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.#ctor">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.#ctor(System.Func{Microsoft.AspNet.SignalR.Messaging.Message,System.Boolean},System.Action{System.IO.TextWriter})">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" />의 새 인스턴스를 만듭니다.</summary>
      <param name="exclude">메시지가 클라이언트에 기록되어야 하는지 결정하는 필터입니다.</param>
      <param name="writeCursor">커서 기록기입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Aborted">
      <summary>연결이 강제로 닫혔는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>연결이 강제로 닫혔으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Disconnect">
      <summary>연결에서 연결 끊기 명령을 받았는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>연결에서 연결 끊기 명령을 받은 경우 true, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.GroupsToken">
      <summary>그룹 목록을 나타내는 서명된 토큰을 가져오거나 설정합니다.</summary>
      <returns>토큰 그룹입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Initializing">
      <summary>연결을 초기화 중인 경우 True입니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.LongPollDelay">
      <summary>수신된 데이터가 없는 경우 연결이 다시 설정되기까지 긴 폴링 클라이언트가 대기해야 하는 시간을 가져오거나 설정합니다.</summary>
      <returns>수신된 데이터가 없는 경우 연결이 다시 설정되기까지 긴 폴링 클라이언트가 대기해야 하는 시간입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Messages">
      <summary>수신 중인 연결에 전송될 메시지 목록을 가져오거나 설정합니다.</summary>
      <returns>수신 중인 연결에 전송될 메시지 목록입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Microsoft#AspNet#SignalR#Json#IJsonWritable#WriteJson(System.IO.TextWriter)">
      <summary>성능 향상을 위해 Json.NET의 JsonTextWriter를 사용하여 <see cref="T:Microsoft.AspNet.SignalR.Transports.PersistentResponse" />의 필수 구성 요소만 JSON으로 직렬화합니다.</summary>
      <param name="writer">JSON 직렬화를 수신하는 <see cref="T:System.IO.TextWriter" />입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Reconnect">
      <summary>클라이언트가 다시 연결을 시도해야 하면 true입니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.Terminal"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.PersistentResponse.TotalCount">
      <summary>수신 중인 연결을 보낸 총 메시지 개수를 가져오거나 설정합니다.</summary>
      <returns>수신 중인 연결을 보낸 총 메시지 개수입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport">
      <summary>서버에서 SignalR로 이벤트를 보내는 전송 방법을 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="context">호스트 컨텍스트입니다.</param>
      <param name="resolver">IDependency 확인자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />으로 응답을 초기화합니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportConnection" />으로 초기화된 응답입니다.</returns>
      <param name="connection">전송 연결의 초기화입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.KeepAlive">
      <summary>인터넷 리소스와의 영구 연결을 설정하는 keep-alive 메서드를 반환합니다.</summary>
      <returns>인터넷 리소스와의 영구 연결을 설정하는 keep-alive 메서드입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />에 영구 응답을 보냅니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport" />에 보내는 영구 응답입니다.</returns>
      <param name="response">영구 응답입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates">
      <summary>TransportConnectionState의 특성을 열거합니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Aborted">
      <summary>중단된 연결 상태입니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Added">
      <summary>추가된 연결 상태입니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Disconnected">
      <summary>끊어진 연결 상태입니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.DisconnectMessageReceived">
      <summary>연결이 끊어진 수신된 메시지의 상태입니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Disposed">
      <summary>삭제된 연결 상태입니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.HttpRequestEnded">
      <summary>종료된 HTTP 요청의 연결 상태입니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.None">
      <summary>연결 없음 상태입니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.QueueDrained">
      <summary>비워진 연결 상태 큐입니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Removed">
      <summary>제거된 연결 상태입니다.</summary>
    </member>
    <member name="F:Microsoft.AspNet.SignalR.Transports.TransportConnectionStates.Replaced">
      <summary>대체된 연결 상태입니다.</summary>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase">
      <summary>여기에 있는 콘텐츠는 업데이트되지 않습니다. 여기에 자료를 추가하지 마십시오.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="context">호스트 컨텍스트입니다.</param>
      <param name="heartbeat">전송 하트비트입니다.</param>
      <param name="performanceCounterManager">성능 카운터 관리자입니다.</param>
      <param name="traceManager">추적 관리자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Abort">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />에 대한 현재 작업 프로세스를 중단합니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />에 대해 중단할 현재 작업 프로세스입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Abort(System.Boolean)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />에 대한 현재 작업 프로세스를 중단합니다.</summary>
      <returns>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />에 대해 중단할 현재 작업 프로세스입니다.</returns>
      <param name="clean">중단된 프로세스에서 모든 작업을 정리할지를 나타냅니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ApplyState(Microsoft.AspNet.SignalR.Transports.TransportConnectionStates)">
      <summary>연결 끊기를 기반으로 전송 연결 상태를 적용합니다.</summary>
      <param name="states">전송 연결 상태입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.CancellationToken">
      <summary>연결의 수명을 나타내는 취소 토큰을 가져옵니다.</summary>
      <returns>연결의 수명을 나타내는 취소 토큰입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Connection">
      <summary>전송 연결 끊기를 기반으로 전송 연결을 가져오거나 설정합니다.</summary>
      <returns>전송 연결 끊기에 기반한 전송 연결입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectionEndToken">
      <summary>이 토큰에 대한 작업을 종료하는 연결을 가져옵니다.</summary>
      <returns>이 토큰에 대한 작업을 종료하는 연결입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectionId">
      <summary>연결 ID를 가져오거나 설정합니다.</summary>
      <returns>연결 ID가 포함된 문자열입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.ConnectTask"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Context">
      <summary>전송 연결 끊기와 연관된 호스트 컨텍스트를 가져옵니다.</summary>
      <returns>전송 연결 끊기와 연관된 호스트 컨텍스트입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.CreateResponseWriter">
      <summary>전송 연결 끊기를 기반으로 응답을 만드는 기록기를 나타냅니다.</summary>
      <returns>전송 연결 끊기를 기반으로 응답을 만드는 기록기입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Disconnect">
      <summary>연결이 끊어지게 됩니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Disconnected">
      <summary>연결 전송에 대한 disconnected 속성을 가져오거나 설정합니다.</summary>
      <returns>연결 전송에 대한 disconnected 속성입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.DisconnectThreshold">
      <summary>연결이 중단된 후 연결이 끊어질 때까지의 대기 시간 범위를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.TimeSpan" />을 반환합니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Dispose">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" /> 클래스의 현재 인스턴스에서 사용된 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Dispose(System.Boolean)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing">관리된 리소스와 관리되지 않은 리소스를 모두 해제하려면 true이고, 관리되지 않은 리소스만 해제하려면 false입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.End">
      <summary>연결을 중단합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.EnqueueOperation(System.Func{System.Threading.Tasks.Task})">
      <summary>큐 작업을 종료하는 개체를 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />을 반환합니다.</returns>
      <param name="writeAsync">비동기적으로 씁니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
      <summary>큐 작업을 종료하는 개체를 나타냅니다.</summary>
      <returns>큐 작업의 끝을 나타내는 개체입니다.</returns>
      <param name="writeAsync">비동기적으로 씁니다.</param>
      <param name="state">상태입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Heartbeat">
      <summary>연결 추적 상태를 관리하는 전송 하트비트를 가져옵니다.</summary>
      <returns>연결 추적 상태를 관리하는 전송 하트비트입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.HostShutdownToken"></member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IncrementErrors">
      <summary>전송 연결 끊기를 기반으로 오류를 늘립니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.InitializePersistentState">
      <summary>전송 연결 끊기를 기반으로 유지 상태를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsAbortRequest">
      <summary>연결에서 중단을 요청하는지를 나타내는 값을 가져옵니다.</summary>
      <returns>연결에서 중단을 요청하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsAlive">
      <summary>연결이 유지되는지를 나타내는 값을 가져옵니다.</summary>
      <returns>연결이 유지되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsConnectRequest">
      <summary>연결에서 요청이 있는지를 나타내는 값을 가져옵니다.</summary>
      <returns>연결에서 요청이 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.IsTimedOut">
      <summary>연결이 시간 초과되었는지를 나타내는 값을 가져옵니다.</summary>
      <returns>연결이 시간 초과되었으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.KeepAlive">
      <summary>연결을 통해 연결 유지 ping을 보냅니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />을 반환합니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.OutputWriter">
      <summary>순차적인 일련의 문자를 쓸 수 있는 출력 기록기를 가져옵니다.</summary>
      <returns>순차적인 일련의 문자를 쓸 수 있는 출력 기록기입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.SupportsKeepAlive">
      <summary>전송에서 연결 유지가 지원되는지를 나타내는 값을 가져옵니다.</summary>
      <returns>전송에서 연결 유지가 지원되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Timeout">
      <summary>연결의 시간이 초과됩니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Trace">
      <summary>코드 실행을 추적하고 추적 메시지를 해당 원본과 연결할 원본을 가져옵니다.</summary>
      <returns>코드 실행을 추적하고 추적 메시지를 해당 원본과 연결할 원본입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase.Url">
      <summary>연결의 URI를 가져옵니다.</summary>
      <returns>연결의 URI입니다.</returns>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat" />의 기본 구현을 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="resolver">
        <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.AddOrUpdateConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>추적된 연결 목록에 새 연결을 추가합니다.</summary>
      <param name="connection">추가될 연결입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.Dispose">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" /> 클래스의 현재 인스턴스에서 사용된 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.Dispose(System.Boolean)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing">관리된 리소스와 관리되지 않은 리소스를 모두 해제하려면 true이고, 관리되지 않은 리소스만 해제하려면 false입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.GetConnections">
      <summary>추적 중인 연결 목록을 가져옵니다.</summary>
      <returns>연결 목록입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.MarkConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>기존 연결을 활성으로 표시합니다.</summary>
      <param name="connection">표시할 연결입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportHeartbeat.RemoveConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
      <summary>추적된 연결 목록에서 연결을 제거합니다.</summary>
      <param name="connection">제거할 연결입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.TransportManager">
      <summary>기본 <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransportManager" /> 구현입니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.TransportManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="resolver">기본 <see cref="T:Microsoft.AspNet.SignalR.IDependencyResolver" />입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.GetTransport(Microsoft.AspNet.SignalR.Hosting.HostContext)">
      <summary>지정된 <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />에 대한 지정된 전송을 가져옵니다.</summary>
      <returns>지정된 <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />에 대한 <see cref="T:Microsoft.AspNet.SignalR.Transports.ITransport" />입니다.</returns>
      <param name="hostContext">현재 요청에 대한 <see cref="T:Microsoft.AspNet.SignalR.Hosting.HostContext" />입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.Register(System.String,System.Func{Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.Transports.ITransport})">
      <summary>지원되는 전송 목록에 새 전송을 추가합니다.</summary>
      <param name="transportName">지정된 전송입니다.</param>
      <param name="transportFactory">지정된 전송에 대한 팩터리 메서드입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.Remove(System.String)">
      <summary>지원되는 전송 목록에서 전송을 제거합니다.</summary>
      <param name="transportName">지정된 전송입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.TransportManager.SupportsTransport(System.String)">
      <summary>지정된 전송이 지원되는지 여부를 확인합니다.</summary>
      <returns>전송이 지원되면 True, 그렇지 않으면 False입니다.</returns>
      <param name="transportName">테스트할 전송의 이름입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.Transports.WebSocketTransport">
      <summary>여기에 있는 콘텐츠는 업데이트되지 않습니다. 여기에 자료를 추가하지 마십시오.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
      <summary>
        <see cref="T:Microsoft.AspNet.SignalR.Transports.WebSocketTransport" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="context">호스트 컨텍스트입니다.</param>
      <param name="resolver">종속성 확인자입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.CancellationToken">
      <summary>전송에 사용되는 취소 토큰을 가져옵니다.</summary>
      <returns>전송에 사용되는 취소 토큰입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.CreateResponseWriter"></member>
    <member name="P:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.IsAlive">
      <summary>전송 연결이 유지되는지를 나타내는 값을 가져옵니다.</summary>
      <returns>전송 연결이 유지되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.KeepAlive">
      <summary>전송 연결을 유지합니다.</summary>
      <returns>전송 연결을 유지하는 작업입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
      <summary>연결 요청을 처리합니다.</summary>
      <returns>연결을 요청하는 작업을 나타내는 작업입니다.</returns>
      <param name="connection">연결입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
      <summary>WebSocket 응답을 보냅니다.</summary>
      <returns>응답을 보내는 작업을 나타내는 작업입니다.</returns>
      <param name="response">보낼 응답입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.Transports.WebSocketTransport.Send(System.Object)">
      <summary>전송 값을 보냅니다.</summary>
      <returns>전송 값을 보내는 작업을 나타내는 작업입니다.</returns>
      <param name="value">보낼 값입니다.</param>
    </member>
    <member name="T:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler">
      <summary>SignalR WebSocket을 관리하는 인스턴스를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.#ctor(System.Nullable{System.Int32})"></member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Close">
      <summary>이 인스턴스를 닫습니다.</summary>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Error">
      <summary>WebSocket 처리 관련 오류를 가져오거나 설정합니다.</summary>
      <returns>WebSocket 처리 관련 오류입니다.</returns>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.MaxIncomingMessageSize">
      <summary>들어오는 메시지의 최대 크기를 가져옵니다.</summary>
      <returns>들어오는 메시지의 최대 크기입니다.</returns>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnClose(System.Boolean)">
      <summary>이 인스턴스가 닫힐 때 발생합니다.</summary>
      <param name="clean">추적을 정리하려면 true입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnError">
      <summary>처리기 작업 중 오류가 발생하면 이벤트가 발생합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnMessage(System.Byte[])">
      <summary>메시지를 수신하면 이벤트가 발생합니다.</summary>
      <param name="message">메시지입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnMessage(System.String)">
      <summary>메시지를 수신하면 이벤트가 발생합니다.</summary>
      <param name="message">메시지입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.OnOpen">
      <summary>이 인스턴스를 열면 이벤트가 발생합니다.</summary>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.ProcessWebSocketRequestAsync(System.Net.WebSockets.WebSocket,System.Threading.CancellationToken)">
      <summary>처리기에서 수신된 요청을 비동기적으로 처리합니다.</summary>
      <returns>작업의 결과입니다.</returns>
      <param name="webSocket">WebSocket입니다.</param>
      <param name="disconnectToken">연결 끊기 토큰입니다.</param>
    </member>
    <member name="M:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.Send(System.String)">
      <summary>처리기와 연관된 메시지를 보냅니다.</summary>
      <returns>보낸 메시지입니다.</returns>
      <param name="message">보낼 메시지입니다.</param>
    </member>
    <member name="P:Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler.WebSocket">
      <summary>WebSocket을 가져오거나 설정합니다.</summary>
      <returns>WebSocket입니다.</returns>
    </member>
    <member name="T:Owin.ObsoleteOwinExtensions"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection``1(Owin.IAppBuilder,System.String)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection``1(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapConnection(Owin.IAppBuilder,System.String,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="M:Owin.ObsoleteOwinExtensions.MapHubs(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.HubConfiguration)"></member>
    <member name="T:Owin.OwinExtensions">
      <summary>Owin 확장에 대한 연결을 나타냅니다.</summary>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder)">
      <summary>SignalR 허브를 "/signalr”의 앱 작성기 파이프라인에 매핑합니다.</summary>
      <returns>
        <see cref="T:Owin.IAppBuilder" />을 반환합니다.</returns>
      <param name="builder">앱 작성기입니다.</param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>SignalR 허브를 "/signalr”의 앱 작성기 파이프라인에 매핑합니다.</summary>
      <returns>
        <see cref="T:Owin.IAppBuilder" />을 반환합니다.</returns>
      <param name="builder">앱 작성기입니다.</param>
      <param name="configuration">사용할 <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" />입니다. </param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR``1(Owin.IAppBuilder,System.String)">
      <summary>지정된 SignalR <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />을 지정된 경로의 앱 작성기 파이프라인에 매핑합니다. </summary>
      <returns>
        <see cref="T:Owin.IAppBuilder" />을 반환합니다.</returns>
      <param name="builder">앱 작성기입니다.</param>
      <param name="path">
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />을 매핑할 경로입니다.</param>
      <typeparam name="TConnection">
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />의 형식입니다.</typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR``1(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>지정된 SignalR <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />을 지정된 경로의 앱 작성기 파이프라인에 매핑합니다. </summary>
      <returns>
        <see cref="T:Owin.IAppBuilder" />을 반환합니다.</returns>
      <param name="builder">앱 작성기입니다.</param>
      <param name="path">영구 연결을 매핑할 경로입니다.</param>
      <param name="configuration">사용할 <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />입니다. </param>
      <typeparam name="TConnection">
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />의 형식입니다.</typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>SignalR 허브를 지정된 경로의 앱 작성기 파이프라인에 매핑합니다.</summary>
      <returns>
        <see cref="T:Owin.IAppBuilder" />을 반환합니다.</returns>
      <param name="builder">앱 작성기입니다.</param>
      <param name="path">signalr 허브를 매핑할 경로입니다.</param>
      <param name="configuration">사용할 <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" />입니다. </param>
    </member>
    <member name="M:Owin.OwinExtensions.MapSignalR(Owin.IAppBuilder,System.String,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>지정된 <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />을 지정된 경로의 앱 작성기 파이프라인에 매핑합니다. </summary>
      <returns>
        <see cref="T:Owin.IAppBuilder" />을 반환합니다.</returns>
      <param name="builder">앱 작성기입니다.</param>
      <param name="path">영구 연결을 매핑할 경로입니다.</param>
      <param name="connectionType">
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />의 형식입니다.</param>
      <param name="configuration">사용할 <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />입니다. </param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder)">
      <summary>SignalR 허브를 앱 작성기 파이프라인에 추가합니다.</summary>
      <param name="builder">앱 작성기입니다.</param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR``1(Owin.IAppBuilder)">
      <summary>지정된 SignalR <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />을 앱 작성기에 추가합니다. </summary>
      <param name="builder">앱 작성기입니다.</param>
      <typeparam name="TConnection">
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />의 형식입니다.</typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR``1(Owin.IAppBuilder,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <param name="builder">앱 작성기입니다.</param>
      <param name="configuration">사용할 <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />입니다.</param>
      <typeparam name="TConnection">  지정된 SignalR <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />을 앱 작성기에 추가합니다. </typeparam>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder,Microsoft.AspNet.SignalR.HubConfiguration)">
      <summary>SignalR 허브를 앱 작성기 파이프라인에 추가합니다.</summary>
      <param name="builder">앱 작성기입니다.</param>
      <param name="configuration">사용할 <see cref="T:Microsoft.AspNet.SignalR.HubConfiguration" />입니다. </param>
    </member>
    <member name="M:Owin.OwinExtensions.RunSignalR(Owin.IAppBuilder,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
      <summary>지정된 SignalR <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />을 앱 작성기에 추가합니다. </summary>
      <param name="builder">앱 작성기입니다.</param>
      <param name="connectionType">
        <see cref="T:Microsoft.AspNet.SignalR.PersistentConnection" />의 형식입니다.</param>
      <param name="configuration">사용할 <see cref="T:Microsoft.AspNet.SignalR.ConnectionConfiguration" />입니다. </param>
    </member>
    <member name="T:System.Diagnostics.TraceSourceExtensions">
      <summary>Provides extension methods for used by SignalR.</summary>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceError(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace error message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace error message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceError(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace error message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceVerbose(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace verbose message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceVerbose(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace verbose message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceWarning(System.Diagnostics.TraceSource,System.String)">
      <summary>Writes trace warning message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="msg">The trace warning message to write.</param>
    </member>
    <member name="M:System.Diagnostics.TraceSourceExtensions.TraceWarning(System.Diagnostics.TraceSource,System.String,System.Object[])">
      <summary>Writes trace warning message to the specified trace source.</summary>
      <param name="traceSource">The trace source to write to.</param>
      <param name="format">The message format to write to.</param>
      <param name="args">The arguments associated with the <paramref name="format" />.</param>
    </member>
  </members>
</doc>